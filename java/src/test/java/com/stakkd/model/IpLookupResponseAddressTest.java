/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IpLookupResponseAddress
 */
public class IpLookupResponseAddressTest {
    private final IpLookupResponseAddress model = new IpLookupResponseAddress();

    /**
     * Model tests for IpLookupResponseAddress
     */
    @Test
    public void testIpLookupResponseAddress() {
        // TODO: test IpLookupResponseAddress
    }

    /**
     * Test the property 'zipcode'
     */
    @Test
    public void zipcodeTest() {
        // TODO: test zipcode
    }

    /**
     * Test the property 'unitNumber'
     */
    @Test
    public void unitNumberTest() {
        // TODO: test unitNumber
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'postDirection'
     */
    @Test
    public void postDirectionTest() {
        // TODO: test postDirection
    }

    /**
     * Test the property 'streetNumber'
     */
    @Test
    public void streetNumberTest() {
        // TODO: test streetNumber
    }

    /**
     * Test the property 'preDirection'
     */
    @Test
    public void preDirectionTest() {
        // TODO: test preDirection
    }

    /**
     * Test the property 'streetType'
     */
    @Test
    public void streetTypeTest() {
        // TODO: test streetType
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'unitType'
     */
    @Test
    public void unitTypeTest() {
        // TODO: test unitType
    }

    /**
     * Test the property 'streetName'
     */
    @Test
    public void streetNameTest() {
        // TODO: test streetName
    }

}
