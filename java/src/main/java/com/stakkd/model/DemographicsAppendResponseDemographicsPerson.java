/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonEducation;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonFinances;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonLanguage;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonRace;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonWorkerType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DemographicsAppendResponseDemographicsPerson
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-04T16:59:20.816781-04:00[America/New_York]")
public class DemographicsAppendResponseDemographicsPerson {
  public static final String SERIALIZED_NAME_EDUCATION = "education";
  @SerializedName(SERIALIZED_NAME_EDUCATION)
  private DemographicsAppendResponseDemographicsPersonEducation education;

  /**
   * The gender of the person, where: M &#x3D; Male; F &#x3D; Female; U &#x3D; Unknown.
   */
  @JsonAdapter(GenderEnum.Adapter.class)
  public enum GenderEnum {
    M("M"),
    
    F("F"),
    
    U("U");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GenderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private GenderEnum gender;

  /**
   * The ethnicity of the person.
   */
  @JsonAdapter(EthnicityEnum.Adapter.class)
  public enum EthnicityEnum {
    ASIAN("ASIAN"),
    
    AFRICANAMERICAN("AFRICANAMERICAN"),
    
    HISPANIC("HISPANIC");

    private String value;

    EthnicityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EthnicityEnum fromValue(String value) {
      for (EthnicityEnum b : EthnicityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EthnicityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EthnicityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EthnicityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EthnicityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private EthnicityEnum ethnicity;

  public static final String SERIALIZED_NAME_RACE = "race";
  @SerializedName(SERIALIZED_NAME_RACE)
  private DemographicsAppendResponseDemographicsPersonRace race;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "workerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private DemographicsAppendResponseDemographicsPersonWorkerType workerType;

  public static final String SERIALIZED_NAME_PERCENT_MAIL_ORDER_RESPONDENT = "percentMailOrderRespondent";
  @SerializedName(SERIALIZED_NAME_PERCENT_MAIL_ORDER_RESPONDENT)
  private Integer percentMailOrderRespondent;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private DemographicsAppendResponseDemographicsPersonLanguage language;

  public static final String SERIALIZED_NAME_FINANCES = "finances";
  @SerializedName(SERIALIZED_NAME_FINANCES)
  private DemographicsAppendResponseDemographicsPersonFinances finances;

  public static final String SERIALIZED_NAME_IS_SENIOR = "isSenior";
  @SerializedName(SERIALIZED_NAME_IS_SENIOR)
  private Boolean isSenior;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private Integer age;

  public DemographicsAppendResponseDemographicsPerson() { 
  }

  public DemographicsAppendResponseDemographicsPerson education(DemographicsAppendResponseDemographicsPersonEducation education) {
    
    this.education = education;
    return this;
  }

   /**
   * Get education
   * @return education
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPersonEducation getEducation() {
    return education;
  }


  public void setEducation(DemographicsAppendResponseDemographicsPersonEducation education) {
    this.education = education;
  }


  public DemographicsAppendResponseDemographicsPerson gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * The gender of the person, where: M &#x3D; Male; F &#x3D; Female; U &#x3D; Unknown.
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The gender of the person, where: M = Male; F = Female; U = Unknown.")

  public GenderEnum getGender() {
    return gender;
  }


  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public DemographicsAppendResponseDemographicsPerson ethnicity(EthnicityEnum ethnicity) {
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * The ethnicity of the person.
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ethnicity of the person.")

  public EthnicityEnum getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(EthnicityEnum ethnicity) {
    this.ethnicity = ethnicity;
  }


  public DemographicsAppendResponseDemographicsPerson race(DemographicsAppendResponseDemographicsPersonRace race) {
    
    this.race = race;
    return this;
  }

   /**
   * Get race
   * @return race
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPersonRace getRace() {
    return race;
  }


  public void setRace(DemographicsAppendResponseDemographicsPersonRace race) {
    this.race = race;
  }


  public DemographicsAppendResponseDemographicsPerson dateOfBirth(String dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * The date of birth as the person, formatted: yyyyMM
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of birth as the person, formatted: yyyyMM")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public DemographicsAppendResponseDemographicsPerson workerType(DemographicsAppendResponseDemographicsPersonWorkerType workerType) {
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Get workerType
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPersonWorkerType getWorkerType() {
    return workerType;
  }


  public void setWorkerType(DemographicsAppendResponseDemographicsPersonWorkerType workerType) {
    this.workerType = workerType;
  }


  public DemographicsAppendResponseDemographicsPerson percentMailOrderRespondent(Integer percentMailOrderRespondent) {
    
    this.percentMailOrderRespondent = percentMailOrderRespondent;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the person is a mail order respondent, +/- 3%.
   * @return percentMailOrderRespondent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the person is a mail order respondent, +/- 3%.")

  public Integer getPercentMailOrderRespondent() {
    return percentMailOrderRespondent;
  }


  public void setPercentMailOrderRespondent(Integer percentMailOrderRespondent) {
    this.percentMailOrderRespondent = percentMailOrderRespondent;
  }


  public DemographicsAppendResponseDemographicsPerson language(DemographicsAppendResponseDemographicsPersonLanguage language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPersonLanguage getLanguage() {
    return language;
  }


  public void setLanguage(DemographicsAppendResponseDemographicsPersonLanguage language) {
    this.language = language;
  }


  public DemographicsAppendResponseDemographicsPerson finances(DemographicsAppendResponseDemographicsPersonFinances finances) {
    
    this.finances = finances;
    return this;
  }

   /**
   * Get finances
   * @return finances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPersonFinances getFinances() {
    return finances;
  }


  public void setFinances(DemographicsAppendResponseDemographicsPersonFinances finances) {
    this.finances = finances;
  }


  public DemographicsAppendResponseDemographicsPerson isSenior(Boolean isSenior) {
    
    this.isSenior = isSenior;
    return this;
  }

   /**
   * Indicates whether the person is flagged as a senior.
   * @return isSenior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the person is flagged as a senior.")

  public Boolean getIsSenior() {
    return isSenior;
  }


  public void setIsSenior(Boolean isSenior) {
    this.isSenior = isSenior;
  }


  public DemographicsAppendResponseDemographicsPerson age(Integer age) {
    
    this.age = age;
    return this;
  }

   /**
   * The age of the person.
   * @return age
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The age of the person.")

  public Integer getAge() {
    return age;
  }


  public void setAge(Integer age) {
    this.age = age;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsPerson demographicsAppendResponseDemographicsPerson = (DemographicsAppendResponseDemographicsPerson) o;
    return Objects.equals(this.education, demographicsAppendResponseDemographicsPerson.education) &&
        Objects.equals(this.gender, demographicsAppendResponseDemographicsPerson.gender) &&
        Objects.equals(this.ethnicity, demographicsAppendResponseDemographicsPerson.ethnicity) &&
        Objects.equals(this.race, demographicsAppendResponseDemographicsPerson.race) &&
        Objects.equals(this.dateOfBirth, demographicsAppendResponseDemographicsPerson.dateOfBirth) &&
        Objects.equals(this.workerType, demographicsAppendResponseDemographicsPerson.workerType) &&
        Objects.equals(this.percentMailOrderRespondent, demographicsAppendResponseDemographicsPerson.percentMailOrderRespondent) &&
        Objects.equals(this.language, demographicsAppendResponseDemographicsPerson.language) &&
        Objects.equals(this.finances, demographicsAppendResponseDemographicsPerson.finances) &&
        Objects.equals(this.isSenior, demographicsAppendResponseDemographicsPerson.isSenior) &&
        Objects.equals(this.age, demographicsAppendResponseDemographicsPerson.age);
  }

  @Override
  public int hashCode() {
    return Objects.hash(education, gender, ethnicity, race, dateOfBirth, workerType, percentMailOrderRespondent, language, finances, isSenior, age);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsPerson {\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    race: ").append(toIndentedString(race)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    percentMailOrderRespondent: ").append(toIndentedString(percentMailOrderRespondent)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    finances: ").append(toIndentedString(finances)).append("\n");
    sb.append("    isSenior: ").append(toIndentedString(isSenior)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

