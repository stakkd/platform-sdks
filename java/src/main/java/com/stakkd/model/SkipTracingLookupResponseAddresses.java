/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.stakkd.model.IpLookupResponseAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SkipTracingLookupResponseAddresses
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-04T16:59:20.816781-04:00[America/New_York]")
public class SkipTracingLookupResponseAddresses {
  public static final String SERIALIZED_NAME_PREVIOUS_ADDRESSES = "previousAddresses";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_ADDRESSES)
  private List<IpLookupResponseAddress> previousAddresses = null;

  public static final String SERIALIZED_NAME_PRIMARY_ADDRESS = "primaryAddress";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ADDRESS)
  private IpLookupResponseAddress primaryAddress;

  public SkipTracingLookupResponseAddresses() { 
  }

  public SkipTracingLookupResponseAddresses previousAddresses(List<IpLookupResponseAddress> previousAddresses) {
    
    this.previousAddresses = previousAddresses;
    return this;
  }

  public SkipTracingLookupResponseAddresses addPreviousAddressesItem(IpLookupResponseAddress previousAddressesItem) {
    if (this.previousAddresses == null) {
      this.previousAddresses = new ArrayList<IpLookupResponseAddress>();
    }
    this.previousAddresses.add(previousAddressesItem);
    return this;
  }

   /**
   * A list of the person&#39;s previous addresses.
   * @return previousAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of the person's previous addresses.")

  public List<IpLookupResponseAddress> getPreviousAddresses() {
    return previousAddresses;
  }


  public void setPreviousAddresses(List<IpLookupResponseAddress> previousAddresses) {
    this.previousAddresses = previousAddresses;
  }


  public SkipTracingLookupResponseAddresses primaryAddress(IpLookupResponseAddress primaryAddress) {
    
    this.primaryAddress = primaryAddress;
    return this;
  }

   /**
   * Get primaryAddress
   * @return primaryAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IpLookupResponseAddress getPrimaryAddress() {
    return primaryAddress;
  }


  public void setPrimaryAddress(IpLookupResponseAddress primaryAddress) {
    this.primaryAddress = primaryAddress;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkipTracingLookupResponseAddresses skipTracingLookupResponseAddresses = (SkipTracingLookupResponseAddresses) o;
    return Objects.equals(this.previousAddresses, skipTracingLookupResponseAddresses.previousAddresses) &&
        Objects.equals(this.primaryAddress, skipTracingLookupResponseAddresses.primaryAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(previousAddresses, primaryAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkipTracingLookupResponseAddresses {\n");
    sb.append("    previousAddresses: ").append(toIndentedString(previousAddresses)).append("\n");
    sb.append("    primaryAddress: ").append(toIndentedString(primaryAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

