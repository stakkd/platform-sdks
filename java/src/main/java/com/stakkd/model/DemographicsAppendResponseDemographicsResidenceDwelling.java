/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DemographicsAppendResponseDemographicsResidenceDwelling
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-04T16:59:20.816781-04:00[America/New_York]")
public class DemographicsAppendResponseDemographicsResidenceDwelling {
  public static final String SERIALIZED_NAME_PERCENT_SINGLE_FAMILY = "percentSingleFamily";
  @SerializedName(SERIALIZED_NAME_PERCENT_SINGLE_FAMILY)
  private Integer percentSingleFamily;

  /**
   * The type of dwelling for the residence.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SINGLEFAMILY("SINGLEFAMILY"),
    
    MULTIPLEFAMILY("MULTIPLEFAMILY");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_PERCENT_MULTIPLE_FAMILY = "percentMultipleFamily";
  @SerializedName(SERIALIZED_NAME_PERCENT_MULTIPLE_FAMILY)
  private Integer percentMultipleFamily;

  public DemographicsAppendResponseDemographicsResidenceDwelling() { 
  }

  public DemographicsAppendResponseDemographicsResidenceDwelling percentSingleFamily(Integer percentSingleFamily) {
    
    this.percentSingleFamily = percentSingleFamily;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the residence is a single family dwelling, +/- 3%.
   * @return percentSingleFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the residence is a single family dwelling, +/- 3%.")

  public Integer getPercentSingleFamily() {
    return percentSingleFamily;
  }


  public void setPercentSingleFamily(Integer percentSingleFamily) {
    this.percentSingleFamily = percentSingleFamily;
  }


  public DemographicsAppendResponseDemographicsResidenceDwelling type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of dwelling for the residence.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of dwelling for the residence.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public DemographicsAppendResponseDemographicsResidenceDwelling percentMultipleFamily(Integer percentMultipleFamily) {
    
    this.percentMultipleFamily = percentMultipleFamily;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the residence is a multiple family dwelling, +/- 3%.
   * @return percentMultipleFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the residence is a multiple family dwelling, +/- 3%.")

  public Integer getPercentMultipleFamily() {
    return percentMultipleFamily;
  }


  public void setPercentMultipleFamily(Integer percentMultipleFamily) {
    this.percentMultipleFamily = percentMultipleFamily;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsResidenceDwelling demographicsAppendResponseDemographicsResidenceDwelling = (DemographicsAppendResponseDemographicsResidenceDwelling) o;
    return Objects.equals(this.percentSingleFamily, demographicsAppendResponseDemographicsResidenceDwelling.percentSingleFamily) &&
        Objects.equals(this.type, demographicsAppendResponseDemographicsResidenceDwelling.type) &&
        Objects.equals(this.percentMultipleFamily, demographicsAppendResponseDemographicsResidenceDwelling.percentMultipleFamily);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percentSingleFamily, type, percentMultipleFamily);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsResidenceDwelling {\n");
    sb.append("    percentSingleFamily: ").append(toIndentedString(percentSingleFamily)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    percentMultipleFamily: ").append(toIndentedString(percentMultipleFamily)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

