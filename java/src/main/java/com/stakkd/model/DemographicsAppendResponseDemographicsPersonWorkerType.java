/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DemographicsAppendResponseDemographicsPersonWorkerType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-04T16:59:20.816781-04:00[America/New_York]")
public class DemographicsAppendResponseDemographicsPersonWorkerType {
  public static final String SERIALIZED_NAME_PERCENT_WHITE_COLLAR = "percentWhiteCollar";
  @SerializedName(SERIALIZED_NAME_PERCENT_WHITE_COLLAR)
  private Integer percentWhiteCollar;

  public static final String SERIALIZED_NAME_PERCENT_BLUE_COLLAR = "percentBlueCollar";
  @SerializedName(SERIALIZED_NAME_PERCENT_BLUE_COLLAR)
  private Integer percentBlueCollar;

  public static final String SERIALIZED_NAME_PERCENT_OTHER = "percentOther";
  @SerializedName(SERIALIZED_NAME_PERCENT_OTHER)
  private Integer percentOther;

  public DemographicsAppendResponseDemographicsPersonWorkerType() { 
  }

  public DemographicsAppendResponseDemographicsPersonWorkerType percentWhiteCollar(Integer percentWhiteCollar) {
    
    this.percentWhiteCollar = percentWhiteCollar;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the person is a white collar worker, +/- 3%.
   * @return percentWhiteCollar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the person is a white collar worker, +/- 3%.")

  public Integer getPercentWhiteCollar() {
    return percentWhiteCollar;
  }


  public void setPercentWhiteCollar(Integer percentWhiteCollar) {
    this.percentWhiteCollar = percentWhiteCollar;
  }


  public DemographicsAppendResponseDemographicsPersonWorkerType percentBlueCollar(Integer percentBlueCollar) {
    
    this.percentBlueCollar = percentBlueCollar;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the person is a blue collar worker, +/- 3%.
   * @return percentBlueCollar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the person is a blue collar worker, +/- 3%.")

  public Integer getPercentBlueCollar() {
    return percentBlueCollar;
  }


  public void setPercentBlueCollar(Integer percentBlueCollar) {
    this.percentBlueCollar = percentBlueCollar;
  }


  public DemographicsAppendResponseDemographicsPersonWorkerType percentOther(Integer percentOther) {
    
    this.percentOther = percentOther;
    return this;
  }

   /**
   * The Penetration Percentage for indicating whether the person is some other type of worker, +/- 3%.
   * @return percentOther
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the person is some other type of worker, +/- 3%.")

  public Integer getPercentOther() {
    return percentOther;
  }


  public void setPercentOther(Integer percentOther) {
    this.percentOther = percentOther;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsPersonWorkerType demographicsAppendResponseDemographicsPersonWorkerType = (DemographicsAppendResponseDemographicsPersonWorkerType) o;
    return Objects.equals(this.percentWhiteCollar, demographicsAppendResponseDemographicsPersonWorkerType.percentWhiteCollar) &&
        Objects.equals(this.percentBlueCollar, demographicsAppendResponseDemographicsPersonWorkerType.percentBlueCollar) &&
        Objects.equals(this.percentOther, demographicsAppendResponseDemographicsPersonWorkerType.percentOther);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percentWhiteCollar, percentBlueCollar, percentOther);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsPersonWorkerType {\n");
    sb.append("    percentWhiteCollar: ").append(toIndentedString(percentWhiteCollar)).append("\n");
    sb.append("    percentBlueCollar: ").append(toIndentedString(percentBlueCollar)).append("\n");
    sb.append("    percentOther: ").append(toIndentedString(percentOther)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

