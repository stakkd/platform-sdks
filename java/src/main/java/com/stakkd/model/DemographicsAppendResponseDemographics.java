/*
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.stakkd.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.stakkd.model.DemographicsAppendResponseDemographicsFamily;
import com.stakkd.model.DemographicsAppendResponseDemographicsPerson;
import com.stakkd.model.DemographicsAppendResponseDemographicsResidence;
import com.stakkd.model.DemographicsAppendResponseDemographicsVehicle;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DemographicsAppendResponseDemographics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-04T16:59:20.816781-04:00[America/New_York]")
public class DemographicsAppendResponseDemographics {
  /**
   * The demographics level for the data.
   */
  @JsonAdapter(LevelEnum.Adapter.class)
  public enum LevelEnum {
    ZIP9("ZIP9"),
    
    ZIP7("ZIP7"),
    
    ZIP5("ZIP5");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LevelEnum fromValue(String value) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private LevelEnum level;

  public static final String SERIALIZED_NAME_PERSON = "person";
  @SerializedName(SERIALIZED_NAME_PERSON)
  private DemographicsAppendResponseDemographicsPerson person;

  public static final String SERIALIZED_NAME_RESIDENCE = "residence";
  @SerializedName(SERIALIZED_NAME_RESIDENCE)
  private DemographicsAppendResponseDemographicsResidence residence;

  public static final String SERIALIZED_NAME_FAMILY = "family";
  @SerializedName(SERIALIZED_NAME_FAMILY)
  private DemographicsAppendResponseDemographicsFamily family;

  public static final String SERIALIZED_NAME_VEHICLE = "vehicle";
  @SerializedName(SERIALIZED_NAME_VEHICLE)
  private DemographicsAppendResponseDemographicsVehicle vehicle;

  public DemographicsAppendResponseDemographics() { 
  }

  public DemographicsAppendResponseDemographics level(LevelEnum level) {
    
    this.level = level;
    return this;
  }

   /**
   * The demographics level for the data.
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The demographics level for the data.")

  public LevelEnum getLevel() {
    return level;
  }


  public void setLevel(LevelEnum level) {
    this.level = level;
  }


  public DemographicsAppendResponseDemographics person(DemographicsAppendResponseDemographicsPerson person) {
    
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsPerson getPerson() {
    return person;
  }


  public void setPerson(DemographicsAppendResponseDemographicsPerson person) {
    this.person = person;
  }


  public DemographicsAppendResponseDemographics residence(DemographicsAppendResponseDemographicsResidence residence) {
    
    this.residence = residence;
    return this;
  }

   /**
   * Get residence
   * @return residence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsResidence getResidence() {
    return residence;
  }


  public void setResidence(DemographicsAppendResponseDemographicsResidence residence) {
    this.residence = residence;
  }


  public DemographicsAppendResponseDemographics family(DemographicsAppendResponseDemographicsFamily family) {
    
    this.family = family;
    return this;
  }

   /**
   * Get family
   * @return family
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsFamily getFamily() {
    return family;
  }


  public void setFamily(DemographicsAppendResponseDemographicsFamily family) {
    this.family = family;
  }


  public DemographicsAppendResponseDemographics vehicle(DemographicsAppendResponseDemographicsVehicle vehicle) {
    
    this.vehicle = vehicle;
    return this;
  }

   /**
   * Get vehicle
   * @return vehicle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DemographicsAppendResponseDemographicsVehicle getVehicle() {
    return vehicle;
  }


  public void setVehicle(DemographicsAppendResponseDemographicsVehicle vehicle) {
    this.vehicle = vehicle;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographics demographicsAppendResponseDemographics = (DemographicsAppendResponseDemographics) o;
    return Objects.equals(this.level, demographicsAppendResponseDemographics.level) &&
        Objects.equals(this.person, demographicsAppendResponseDemographics.person) &&
        Objects.equals(this.residence, demographicsAppendResponseDemographics.residence) &&
        Objects.equals(this.family, demographicsAppendResponseDemographics.family) &&
        Objects.equals(this.vehicle, demographicsAppendResponseDemographics.vehicle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(level, person, residence, family, vehicle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographics {\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    residence: ").append(toIndentedString(residence)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

