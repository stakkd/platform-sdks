/*
 * Stakkd API
 * # Introduction\nThe Stakkd platform provides comprehensive data services that meet the business\nobjectives of organizations ranging from Fortune 500 companies to startups.\nOur clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.\n\nThe Stakkd API is documented using the Open API 3.0.1 standard.\n\nAll endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.\n\n# Account Types\nThe API supports two different account types, each with different permissions.\n\n## Paid Account\nPaid accounts provide unlimited access to all of the URIs.\n\n## Trial Account\nTrial Accounts have a limited number of queries to the APIs. Keep in mind that\nqueries which do not return results still count against the Trial Account query limits.\nTrial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io)\n
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASMobileAppendRequest
 */
public class OASMobileAppendRequest {
    /**
     * The zipcode to use in the request. You must provider either the zipcode, or both the city and state.
     * @return zipcode
     */
    public String zipcode { get; set; }

    /**
     * The city to use in the request. You must provider either both the city and state, or the zipcode.
     * @return city
     */
    public String city { get; set; }

    /**
     * The phone to use in the request.
     * @return phone
     */
    public String phone { get; set; }

    /**
     * The address to use in the request.
     * @return address1
     */
    public String address1 { get; set; }

    /**
     * The second address line to use in the request, when needed.
     * @return address2
     */
    public String address2 { get; set; }

    /**
     * The last name to use in the request.
     * @return lastName
     */
    public String lastName { get; set; }

    /**
     * The state to use in the request, abbreviated. You must provider either both the city and state, or the zipcode.
     * @return state
     */
    public String state { get; set; }

    /**
     * The first name to use in the request.
     * @return firstName
     */
    public String firstName { get; set; }

    public static OASMobileAppendRequest getExample() {
        OASMobileAppendRequest mobileAppendRequest = new OASMobileAppendRequest();
          mobileAppendRequest.zipcode = '';
          mobileAppendRequest.city = '';
          mobileAppendRequest.phone = '';
          mobileAppendRequest.address1 = '';
          mobileAppendRequest.address2 = '';
          mobileAppendRequest.lastName = '';
          mobileAppendRequest.state = '';
          mobileAppendRequest.firstName = '';
        return mobileAppendRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMobileAppendRequest) {           
            OASMobileAppendRequest mobileAppendRequest = (OASMobileAppendRequest) obj;
            return this.zipcode == mobileAppendRequest.zipcode
                && this.city == mobileAppendRequest.city
                && this.phone == mobileAppendRequest.phone
                && this.address1 == mobileAppendRequest.address1
                && this.address2 == mobileAppendRequest.address2
                && this.lastName == mobileAppendRequest.lastName
                && this.state == mobileAppendRequest.state
                && this.firstName == mobileAppendRequest.firstName;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (zipcode == null ? 0 : System.hashCode(zipcode));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (phone == null ? 0 : System.hashCode(phone));
        hashCode = (17 * hashCode) + (address1 == null ? 0 : System.hashCode(address1));
        hashCode = (17 * hashCode) + (address2 == null ? 0 : System.hashCode(address2));
        hashCode = (17 * hashCode) + (lastName == null ? 0 : System.hashCode(lastName));
        hashCode = (17 * hashCode) + (state == null ? 0 : System.hashCode(state));
        hashCode = (17 * hashCode) + (firstName == null ? 0 : System.hashCode(firstName));
        return hashCode;
    }
}

