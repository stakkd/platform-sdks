/*
 * Stakkd API
 * # Introduction\nThe Stakkd platform provides comprehensive data services that meet the business\nobjectives of organizations ranging from Fortune 500 companies to startups.\nOur clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.\n\nThe Stakkd API is documented using the Open API 3.0.1 standard.\n\nAll endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.\n\n# Account Types\nThe API supports two different account types, each with different permissions.\n\n## Paid Account\nPaid accounts provide unlimited access to all of the URIs.\n\n## Trial Account\nTrial Accounts have a limited number of queries to the APIs. Keep in mind that\nqueries which do not return results still count against the Trial Account query limits.\nTrial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io)\n
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLookupResponseAddress
 */
public class OASLookupResponseAddress {
    /**
     * Get zipcode
     * @return zipcode
     */
    public String zipcode { get; set; }

    /**
     * Get unitNumber
     * @return unitNumber
     */
    public String unitNumber { get; set; }

    /**
     * Get city
     * @return city
     */
    public String city { get; set; }

    /**
     * Get postDirection
     * @return postDirection
     */
    public String postDirection { get; set; }

    /**
     * Get streetNumber
     * @return streetNumber
     */
    public String streetNumber { get; set; }

    /**
     * Get preDirection
     * @return preDirection
     */
    public String preDirection { get; set; }

    /**
     * Get streetType
     * @return streetType
     */
    public String streetType { get; set; }

    /**
     * Get state
     * @return state
     */
    public String state { get; set; }

    /**
     * Get unitType
     * @return unitType
     */
    public String unitType { get; set; }

    /**
     * Get streetName
     * @return streetName
     */
    public String streetName { get; set; }

    public static OASLookupResponseAddress getExample() {
        OASLookupResponseAddress lookupResponseAddress = new OASLookupResponseAddress();
          lookupResponseAddress.zipcode = '';
          lookupResponseAddress.unitNumber = '';
          lookupResponseAddress.city = '';
          lookupResponseAddress.postDirection = '';
          lookupResponseAddress.streetNumber = '';
          lookupResponseAddress.preDirection = '';
          lookupResponseAddress.streetType = '';
          lookupResponseAddress.state = '';
          lookupResponseAddress.unitType = '';
          lookupResponseAddress.streetName = '';
        return lookupResponseAddress;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLookupResponseAddress) {           
            OASLookupResponseAddress lookupResponseAddress = (OASLookupResponseAddress) obj;
            return this.zipcode == lookupResponseAddress.zipcode
                && this.unitNumber == lookupResponseAddress.unitNumber
                && this.city == lookupResponseAddress.city
                && this.postDirection == lookupResponseAddress.postDirection
                && this.streetNumber == lookupResponseAddress.streetNumber
                && this.preDirection == lookupResponseAddress.preDirection
                && this.streetType == lookupResponseAddress.streetType
                && this.state == lookupResponseAddress.state
                && this.unitType == lookupResponseAddress.unitType
                && this.streetName == lookupResponseAddress.streetName;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (zipcode == null ? 0 : System.hashCode(zipcode));
        hashCode = (17 * hashCode) + (unitNumber == null ? 0 : System.hashCode(unitNumber));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (postDirection == null ? 0 : System.hashCode(postDirection));
        hashCode = (17 * hashCode) + (streetNumber == null ? 0 : System.hashCode(streetNumber));
        hashCode = (17 * hashCode) + (preDirection == null ? 0 : System.hashCode(preDirection));
        hashCode = (17 * hashCode) + (streetType == null ? 0 : System.hashCode(streetType));
        hashCode = (17 * hashCode) + (state == null ? 0 : System.hashCode(state));
        hashCode = (17 * hashCode) + (unitType == null ? 0 : System.hashCode(unitType));
        hashCode = (17 * hashCode) + (streetName == null ? 0 : System.hashCode(streetName));
        return hashCode;
    }
}

