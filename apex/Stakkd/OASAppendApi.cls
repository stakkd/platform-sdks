/*
 * Stakkd API
 * # Introduction\nThe Stakkd platform provides comprehensive data services that meet the business\nobjectives of organizations ranging from Fortune 500 companies to startups.\nOur clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.\n\nThe Stakkd API is documented using the Open API 3.0.1 standard.\n\nAll endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.\n\n# Account Types\nThe API supports two different account types, each with different permissions.\n\n## Paid Account\nPaid accounts provide unlimited access to all of the URIs.\n\n## Trial Account\nTrial Accounts have a limited number of queries to the APIs. Keep in mind that\nqueries which do not return results still count against the Trial Account query limits.\nTrial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io)\n
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAppendApi {
    OASClient client;

    public OASAppendApi(OASClient client) {
        this.client = client;
    }

    public OASAppendApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * 
     * @param contentType  (required)
     * @param xApiKey  (required)
     * @param oaSDemographicsAppendRequest  (required)
     * @return OASDemographicsAppendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDemographicsAppendResponse appendDemographicsPost(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        client.assertNotNull(params.get('oaSDemographicsAppendRequest'), 'oaSDemographicsAppendRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDemographicsAppendResponse) client.invoke(
            'POST', '/append/demographics',
            (OASDemographicsAppendRequest) params.get('oaSDemographicsAppendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'apiKey' },
            OASDemographicsAppendResponse.class
        );
    }
    /**
     * 
     * 
     * @param contentType  (required)
     * @param xApiKey  (required)
     * @param oaSEmailAppendRequest  (required)
     * @return OASEmailAppendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmailAppendResponse appendEmailPost(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        client.assertNotNull(params.get('oaSEmailAppendRequest'), 'oaSEmailAppendRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmailAppendResponse) client.invoke(
            'POST', '/append/email',
            (OASEmailAppendRequest) params.get('oaSEmailAppendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'apiKey' },
            OASEmailAppendResponse.class
        );
    }
    /**
     * 
     * 
     * @param contentType  (required)
     * @param xApiKey  (required)
     * @param oaSMobileAppendRequest  (required)
     * @return OASMobileAppendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASMobileAppendResponse appendMobilePost(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        client.assertNotNull(params.get('oaSMobileAppendRequest'), 'oaSMobileAppendRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASMobileAppendResponse) client.invoke(
            'POST', '/append/mobile',
            (OASMobileAppendRequest) params.get('oaSMobileAppendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'apiKey' },
            OASMobileAppendResponse.class
        );
    }
    /**
     * 
     * 
     * @param contentType  (required)
     * @param xApiKey  (required)
     * @param oaSPhoneAppendRequest  (required)
     * @return OASPhoneAppendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPhoneAppendResponse appendPhonePost(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        client.assertNotNull(params.get('oaSPhoneAppendRequest'), 'oaSPhoneAppendRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPhoneAppendResponse) client.invoke(
            'POST', '/append/phone',
            (OASPhoneAppendRequest) params.get('oaSPhoneAppendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'apiKey' },
            OASPhoneAppendResponse.class
        );
    }
    /**
     * 
     * 
     * @param contentType  (required)
     * @param xApiKey  (required)
     * @param oaSVehicleAppendRequest  (required)
     * @return OASVehicleAppendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASVehicleAppendResponse appendVehiclePost(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        client.assertNotNull(params.get('oaSVehicleAppendRequest'), 'oaSVehicleAppendRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASVehicleAppendResponse) client.invoke(
            'POST', '/append/vehicle',
            (OASVehicleAppendRequest) params.get('oaSVehicleAppendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'apiKey' },
            OASVehicleAppendResponse.class
        );
    }
}
