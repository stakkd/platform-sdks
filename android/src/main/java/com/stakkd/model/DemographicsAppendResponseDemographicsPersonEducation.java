/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.stakkd.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DemographicsAppendResponseDemographicsPersonEducation {
  
  public enum LevelEnum {
     HIGHSCHOOL,  COLLEGE,  GRADUATESCHOOL,  VOCATIONALORTECHNICAL, 
  };
  @SerializedName("level")
  private LevelEnum level = null;
  @SerializedName("medianYearsSchooling")
  private Integer medianYearsSchooling = null;

  /**
   * The highest achieved education level for the person.
   **/
  @ApiModelProperty(value = "The highest achieved education level for the person.")
  public LevelEnum getLevel() {
    return level;
  }
  public void setLevel(LevelEnum level) {
    this.level = level;
  }

  /**
   * The median years of schooling for the person.
   **/
  @ApiModelProperty(value = "The median years of schooling for the person.")
  public Integer getMedianYearsSchooling() {
    return medianYearsSchooling;
  }
  public void setMedianYearsSchooling(Integer medianYearsSchooling) {
    this.medianYearsSchooling = medianYearsSchooling;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsPersonEducation demographicsAppendResponseDemographicsPersonEducation = (DemographicsAppendResponseDemographicsPersonEducation) o;
    return (this.level == null ? demographicsAppendResponseDemographicsPersonEducation.level == null : this.level.equals(demographicsAppendResponseDemographicsPersonEducation.level)) &&
        (this.medianYearsSchooling == null ? demographicsAppendResponseDemographicsPersonEducation.medianYearsSchooling == null : this.medianYearsSchooling.equals(demographicsAppendResponseDemographicsPersonEducation.medianYearsSchooling));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.level == null ? 0: this.level.hashCode());
    result = 31 * result + (this.medianYearsSchooling == null ? 0: this.medianYearsSchooling.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsPersonEducation {\n");
    
    sb.append("  level: ").append(level).append("\n");
    sb.append("  medianYearsSchooling: ").append(medianYearsSchooling).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
