/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.stakkd.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DisconnectVerifyResponsePhone {
  
  public enum PhoneTypeEnum {
     L,  V,  W,  O, 
  };
  @SerializedName("phoneType")
  private PhoneTypeEnum phoneType = null;
  @SerializedName("phone")
  private String phone = null;
  @SerializedName("provider")
  private String provider = null;
  @SerializedName("operatingCompanyNumber")
  private String operatingCompanyNumber = null;
  @SerializedName("confidenceScore")
  private Integer confidenceScore = null;
  @SerializedName("initialDateReceived")
  private String initialDateReceived = null;
  @SerializedName("lastDateReceived")
  private String lastDateReceived = null;
  public enum DirectoryAssistanceEnum {
     PRIVATE,  REMOVED,  EXISTS, 
  };
  @SerializedName("directoryAssistance")
  private DirectoryAssistanceEnum directoryAssistance = null;
  public enum RecordTypeEnum {
     PAYPHONE,  RESIDENTIAL,  BUSINESS,  UNKNOWN, 
  };
  @SerializedName("recordType")
  private RecordTypeEnum recordType = null;
  @SerializedName("directInwardDialNumber")
  private Boolean directInwardDialNumber = null;

  /**
   * The phone type, where: L = 'Landline', V = 'VoIP', W = 'Wireless', and O = 'Other'.
   **/
  @ApiModelProperty(value = "The phone type, where: L = 'Landline', V = 'VoIP', W = 'Wireless', and O = 'Other'.")
  public PhoneTypeEnum getPhoneType() {
    return phoneType;
  }
  public void setPhoneType(PhoneTypeEnum phoneType) {
    this.phoneType = phoneType;
  }

  /**
   * The phone number.
   **/
  @ApiModelProperty(value = "The phone number.")
  public String getPhone() {
    return phone;
  }
  public void setPhone(String phone) {
    this.phone = phone;
  }

  /**
   * The name of the phone provider.
   **/
  @ApiModelProperty(value = "The name of the phone provider.")
  public String getProvider() {
    return provider;
  }
  public void setProvider(String provider) {
    this.provider = provider;
  }

  /**
   * The 4 character alphanumeric phone operating company number.
   **/
  @ApiModelProperty(value = "The 4 character alphanumeric phone operating company number.")
  public String getOperatingCompanyNumber() {
    return operatingCompanyNumber;
  }
  public void setOperatingCompanyNumber(String operatingCompanyNumber) {
    this.operatingCompanyNumber = operatingCompanyNumber;
  }

  /**
   * The telephone confidence score, ranging between 1 and 7, where 1 indicates highest confidence and 7 indicates unconfirmed.
   **/
  @ApiModelProperty(value = "The telephone confidence score, ranging between 1 and 7, where 1 indicates highest confidence and 7 indicates unconfirmed.")
  public Integer getConfidenceScore() {
    return confidenceScore;
  }
  public void setConfidenceScore(Integer confidenceScore) {
    this.confidenceScore = confidenceScore;
  }

  /**
   * The date the record was first received, formatted: YYYYMMDD
   **/
  @ApiModelProperty(value = "The date the record was first received, formatted: YYYYMMDD")
  public String getInitialDateReceived() {
    return initialDateReceived;
  }
  public void setInitialDateReceived(String initialDateReceived) {
    this.initialDateReceived = initialDateReceived;
  }

  /**
   * The date the reocrd was last received as connected, formatted: YYYYMMDD
   **/
  @ApiModelProperty(value = "The date the reocrd was last received as connected, formatted: YYYYMMDD")
  public String getLastDateReceived() {
    return lastDateReceived;
  }
  public void setLastDateReceived(String lastDateReceived) {
    this.lastDateReceived = lastDateReceived;
  }

  /**
   * The directory assistance indicator.
   **/
  @ApiModelProperty(value = "The directory assistance indicator.")
  public DirectoryAssistanceEnum getDirectoryAssistance() {
    return directoryAssistance;
  }
  public void setDirectoryAssistance(DirectoryAssistanceEnum directoryAssistance) {
    this.directoryAssistance = directoryAssistance;
  }

  /**
   * The phone record type.
   **/
  @ApiModelProperty(value = "The phone record type.")
  public RecordTypeEnum getRecordType() {
    return recordType;
  }
  public void setRecordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
  }

  /**
   * Indicates whether or not the phone is flagged as a Direct Inward Dial Number.
   **/
  @ApiModelProperty(value = "Indicates whether or not the phone is flagged as a Direct Inward Dial Number.")
  public Boolean getDirectInwardDialNumber() {
    return directInwardDialNumber;
  }
  public void setDirectInwardDialNumber(Boolean directInwardDialNumber) {
    this.directInwardDialNumber = directInwardDialNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisconnectVerifyResponsePhone disconnectVerifyResponsePhone = (DisconnectVerifyResponsePhone) o;
    return (this.phoneType == null ? disconnectVerifyResponsePhone.phoneType == null : this.phoneType.equals(disconnectVerifyResponsePhone.phoneType)) &&
        (this.phone == null ? disconnectVerifyResponsePhone.phone == null : this.phone.equals(disconnectVerifyResponsePhone.phone)) &&
        (this.provider == null ? disconnectVerifyResponsePhone.provider == null : this.provider.equals(disconnectVerifyResponsePhone.provider)) &&
        (this.operatingCompanyNumber == null ? disconnectVerifyResponsePhone.operatingCompanyNumber == null : this.operatingCompanyNumber.equals(disconnectVerifyResponsePhone.operatingCompanyNumber)) &&
        (this.confidenceScore == null ? disconnectVerifyResponsePhone.confidenceScore == null : this.confidenceScore.equals(disconnectVerifyResponsePhone.confidenceScore)) &&
        (this.initialDateReceived == null ? disconnectVerifyResponsePhone.initialDateReceived == null : this.initialDateReceived.equals(disconnectVerifyResponsePhone.initialDateReceived)) &&
        (this.lastDateReceived == null ? disconnectVerifyResponsePhone.lastDateReceived == null : this.lastDateReceived.equals(disconnectVerifyResponsePhone.lastDateReceived)) &&
        (this.directoryAssistance == null ? disconnectVerifyResponsePhone.directoryAssistance == null : this.directoryAssistance.equals(disconnectVerifyResponsePhone.directoryAssistance)) &&
        (this.recordType == null ? disconnectVerifyResponsePhone.recordType == null : this.recordType.equals(disconnectVerifyResponsePhone.recordType)) &&
        (this.directInwardDialNumber == null ? disconnectVerifyResponsePhone.directInwardDialNumber == null : this.directInwardDialNumber.equals(disconnectVerifyResponsePhone.directInwardDialNumber));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.phoneType == null ? 0: this.phoneType.hashCode());
    result = 31 * result + (this.phone == null ? 0: this.phone.hashCode());
    result = 31 * result + (this.provider == null ? 0: this.provider.hashCode());
    result = 31 * result + (this.operatingCompanyNumber == null ? 0: this.operatingCompanyNumber.hashCode());
    result = 31 * result + (this.confidenceScore == null ? 0: this.confidenceScore.hashCode());
    result = 31 * result + (this.initialDateReceived == null ? 0: this.initialDateReceived.hashCode());
    result = 31 * result + (this.lastDateReceived == null ? 0: this.lastDateReceived.hashCode());
    result = 31 * result + (this.directoryAssistance == null ? 0: this.directoryAssistance.hashCode());
    result = 31 * result + (this.recordType == null ? 0: this.recordType.hashCode());
    result = 31 * result + (this.directInwardDialNumber == null ? 0: this.directInwardDialNumber.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisconnectVerifyResponsePhone {\n");
    
    sb.append("  phoneType: ").append(phoneType).append("\n");
    sb.append("  phone: ").append(phone).append("\n");
    sb.append("  provider: ").append(provider).append("\n");
    sb.append("  operatingCompanyNumber: ").append(operatingCompanyNumber).append("\n");
    sb.append("  confidenceScore: ").append(confidenceScore).append("\n");
    sb.append("  initialDateReceived: ").append(initialDateReceived).append("\n");
    sb.append("  lastDateReceived: ").append(lastDateReceived).append("\n");
    sb.append("  directoryAssistance: ").append(directoryAssistance).append("\n");
    sb.append("  recordType: ").append(recordType).append("\n");
    sb.append("  directInwardDialNumber: ").append(directInwardDialNumber).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
