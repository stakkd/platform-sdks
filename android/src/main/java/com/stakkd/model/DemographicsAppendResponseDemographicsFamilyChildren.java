/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.stakkd.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DemographicsAppendResponseDemographicsFamilyChildren {
  
  @SerializedName("hasChildren")
  private Boolean hasChildren = null;
  public enum ChildrenAgeEnum {
     A,  B,  C,  D, 
  };
  @SerializedName("childrenAge")
  private ChildrenAgeEnum childrenAge = null;
  public enum NumberChildrenEnum {
     A,  B,  C, 
  };
  @SerializedName("numberChildren")
  private NumberChildrenEnum numberChildren = null;

  /**
   * Indicates whether the person is flagged as having children.
   **/
  @ApiModelProperty(value = "Indicates whether the person is flagged as having children.")
  public Boolean getHasChildren() {
    return hasChildren;
  }
  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }

  /**
   * The age range of the children for the person, where A = under 5 years old; B = between 6 and 10 years old; C = between 11 and 15 years old; D = above 15 years old.
   **/
  @ApiModelProperty(value = "The age range of the children for the person, where A = under 5 years old; B = between 6 and 10 years old; C = between 11 and 15 years old; D = above 15 years old.")
  public ChildrenAgeEnum getChildrenAge() {
    return childrenAge;
  }
  public void setChildrenAge(ChildrenAgeEnum childrenAge) {
    this.childrenAge = childrenAge;
  }

  /**
   * The number of children for the person, where A = no children; B = less than 3 children; C = between 3 and 5 children.
   **/
  @ApiModelProperty(value = "The number of children for the person, where A = no children; B = less than 3 children; C = between 3 and 5 children.")
  public NumberChildrenEnum getNumberChildren() {
    return numberChildren;
  }
  public void setNumberChildren(NumberChildrenEnum numberChildren) {
    this.numberChildren = numberChildren;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsFamilyChildren demographicsAppendResponseDemographicsFamilyChildren = (DemographicsAppendResponseDemographicsFamilyChildren) o;
    return (this.hasChildren == null ? demographicsAppendResponseDemographicsFamilyChildren.hasChildren == null : this.hasChildren.equals(demographicsAppendResponseDemographicsFamilyChildren.hasChildren)) &&
        (this.childrenAge == null ? demographicsAppendResponseDemographicsFamilyChildren.childrenAge == null : this.childrenAge.equals(demographicsAppendResponseDemographicsFamilyChildren.childrenAge)) &&
        (this.numberChildren == null ? demographicsAppendResponseDemographicsFamilyChildren.numberChildren == null : this.numberChildren.equals(demographicsAppendResponseDemographicsFamilyChildren.numberChildren));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.hasChildren == null ? 0: this.hasChildren.hashCode());
    result = 31 * result + (this.childrenAge == null ? 0: this.childrenAge.hashCode());
    result = 31 * result + (this.numberChildren == null ? 0: this.numberChildren.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsFamilyChildren {\n");
    
    sb.append("  hasChildren: ").append(hasChildren).append("\n");
    sb.append("  childrenAge: ").append(childrenAge).append("\n");
    sb.append("  numberChildren: ").append(numberChildren).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
