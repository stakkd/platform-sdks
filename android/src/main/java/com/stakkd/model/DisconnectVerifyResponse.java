/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.stakkd.model;

import com.stakkd.model.DisconnectVerifyResponsePhone;
import com.stakkd.model.IpLookupResponseAddress;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DisconnectVerifyResponse {
  
  @SerializedName("connected")
  private Boolean connected = null;
  @SerializedName("address")
  private IpLookupResponseAddress address = null;
  @SerializedName("phone")
  private DisconnectVerifyResponsePhone phone = null;
  @SerializedName("lastName")
  private String lastName = null;
  @SerializedName("middleName")
  private String middleName = null;
  @SerializedName("firstName")
  private String firstName = null;

  /**
   * Indicates whether or not the phone is flagged as connected.
   **/
  @ApiModelProperty(value = "Indicates whether or not the phone is flagged as connected.")
  public Boolean getConnected() {
    return connected;
  }
  public void setConnected(Boolean connected) {
    this.connected = connected;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public IpLookupResponseAddress getAddress() {
    return address;
  }
  public void setAddress(IpLookupResponseAddress address) {
    this.address = address;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DisconnectVerifyResponsePhone getPhone() {
    return phone;
  }
  public void setPhone(DisconnectVerifyResponsePhone phone) {
    this.phone = phone;
  }

  /**
   * The last name for the person.
   **/
  @ApiModelProperty(value = "The last name for the person.")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * The middle name for the person.
   **/
  @ApiModelProperty(value = "The middle name for the person.")
  public String getMiddleName() {
    return middleName;
  }
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  /**
   * The first name for the person.
   **/
  @ApiModelProperty(value = "The first name for the person.")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisconnectVerifyResponse disconnectVerifyResponse = (DisconnectVerifyResponse) o;
    return (this.connected == null ? disconnectVerifyResponse.connected == null : this.connected.equals(disconnectVerifyResponse.connected)) &&
        (this.address == null ? disconnectVerifyResponse.address == null : this.address.equals(disconnectVerifyResponse.address)) &&
        (this.phone == null ? disconnectVerifyResponse.phone == null : this.phone.equals(disconnectVerifyResponse.phone)) &&
        (this.lastName == null ? disconnectVerifyResponse.lastName == null : this.lastName.equals(disconnectVerifyResponse.lastName)) &&
        (this.middleName == null ? disconnectVerifyResponse.middleName == null : this.middleName.equals(disconnectVerifyResponse.middleName)) &&
        (this.firstName == null ? disconnectVerifyResponse.firstName == null : this.firstName.equals(disconnectVerifyResponse.firstName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.connected == null ? 0: this.connected.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.phone == null ? 0: this.phone.hashCode());
    result = 31 * result + (this.lastName == null ? 0: this.lastName.hashCode());
    result = 31 * result + (this.middleName == null ? 0: this.middleName.hashCode());
    result = 31 * result + (this.firstName == null ? 0: this.firstName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisconnectVerifyResponse {\n");
    
    sb.append("  connected: ").append(connected).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  phone: ").append(phone).append("\n");
    sb.append("  lastName: ").append(lastName).append("\n");
    sb.append("  middleName: ").append(middleName).append("\n");
    sb.append("  firstName: ").append(firstName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
