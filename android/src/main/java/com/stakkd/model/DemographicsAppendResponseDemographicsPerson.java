/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.stakkd.model;

import com.stakkd.model.DemographicsAppendResponseDemographicsPersonEducation;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonFinances;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonLanguage;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonRace;
import com.stakkd.model.DemographicsAppendResponseDemographicsPersonWorkerType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DemographicsAppendResponseDemographicsPerson {
  
  @SerializedName("education")
  private DemographicsAppendResponseDemographicsPersonEducation education = null;
  public enum GenderEnum {
     M,  F,  U, 
  };
  @SerializedName("gender")
  private GenderEnum gender = null;
  public enum EthnicityEnum {
     ASIAN,  AFRICANAMERICAN,  HISPANIC, 
  };
  @SerializedName("ethnicity")
  private EthnicityEnum ethnicity = null;
  @SerializedName("race")
  private DemographicsAppendResponseDemographicsPersonRace race = null;
  @SerializedName("dateOfBirth")
  private String dateOfBirth = null;
  @SerializedName("workerType")
  private DemographicsAppendResponseDemographicsPersonWorkerType workerType = null;
  @SerializedName("percentMailOrderRespondent")
  private Integer percentMailOrderRespondent = null;
  @SerializedName("language")
  private DemographicsAppendResponseDemographicsPersonLanguage language = null;
  @SerializedName("finances")
  private DemographicsAppendResponseDemographicsPersonFinances finances = null;
  @SerializedName("isSenior")
  private Boolean isSenior = null;
  @SerializedName("age")
  private Integer age = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public DemographicsAppendResponseDemographicsPersonEducation getEducation() {
    return education;
  }
  public void setEducation(DemographicsAppendResponseDemographicsPersonEducation education) {
    this.education = education;
  }

  /**
   * The gender of the person, where: M = Male; F = Female; U = Unknown.
   **/
  @ApiModelProperty(value = "The gender of the person, where: M = Male; F = Female; U = Unknown.")
  public GenderEnum getGender() {
    return gender;
  }
  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  /**
   * The ethnicity of the person.
   **/
  @ApiModelProperty(value = "The ethnicity of the person.")
  public EthnicityEnum getEthnicity() {
    return ethnicity;
  }
  public void setEthnicity(EthnicityEnum ethnicity) {
    this.ethnicity = ethnicity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DemographicsAppendResponseDemographicsPersonRace getRace() {
    return race;
  }
  public void setRace(DemographicsAppendResponseDemographicsPersonRace race) {
    this.race = race;
  }

  /**
   * The date of birth as the person, formatted: yyyyMM
   **/
  @ApiModelProperty(value = "The date of birth as the person, formatted: yyyyMM")
  public String getDateOfBirth() {
    return dateOfBirth;
  }
  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DemographicsAppendResponseDemographicsPersonWorkerType getWorkerType() {
    return workerType;
  }
  public void setWorkerType(DemographicsAppendResponseDemographicsPersonWorkerType workerType) {
    this.workerType = workerType;
  }

  /**
   * The Penetration Percentage for indicating whether the person is a mail order respondent, +/- 3%.
   **/
  @ApiModelProperty(value = "The Penetration Percentage for indicating whether the person is a mail order respondent, +/- 3%.")
  public Integer getPercentMailOrderRespondent() {
    return percentMailOrderRespondent;
  }
  public void setPercentMailOrderRespondent(Integer percentMailOrderRespondent) {
    this.percentMailOrderRespondent = percentMailOrderRespondent;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DemographicsAppendResponseDemographicsPersonLanguage getLanguage() {
    return language;
  }
  public void setLanguage(DemographicsAppendResponseDemographicsPersonLanguage language) {
    this.language = language;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DemographicsAppendResponseDemographicsPersonFinances getFinances() {
    return finances;
  }
  public void setFinances(DemographicsAppendResponseDemographicsPersonFinances finances) {
    this.finances = finances;
  }

  /**
   * Indicates whether the person is flagged as a senior.
   **/
  @ApiModelProperty(value = "Indicates whether the person is flagged as a senior.")
  public Boolean getIsSenior() {
    return isSenior;
  }
  public void setIsSenior(Boolean isSenior) {
    this.isSenior = isSenior;
  }

  /**
   * The age of the person.
   **/
  @ApiModelProperty(value = "The age of the person.")
  public Integer getAge() {
    return age;
  }
  public void setAge(Integer age) {
    this.age = age;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemographicsAppendResponseDemographicsPerson demographicsAppendResponseDemographicsPerson = (DemographicsAppendResponseDemographicsPerson) o;
    return (this.education == null ? demographicsAppendResponseDemographicsPerson.education == null : this.education.equals(demographicsAppendResponseDemographicsPerson.education)) &&
        (this.gender == null ? demographicsAppendResponseDemographicsPerson.gender == null : this.gender.equals(demographicsAppendResponseDemographicsPerson.gender)) &&
        (this.ethnicity == null ? demographicsAppendResponseDemographicsPerson.ethnicity == null : this.ethnicity.equals(demographicsAppendResponseDemographicsPerson.ethnicity)) &&
        (this.race == null ? demographicsAppendResponseDemographicsPerson.race == null : this.race.equals(demographicsAppendResponseDemographicsPerson.race)) &&
        (this.dateOfBirth == null ? demographicsAppendResponseDemographicsPerson.dateOfBirth == null : this.dateOfBirth.equals(demographicsAppendResponseDemographicsPerson.dateOfBirth)) &&
        (this.workerType == null ? demographicsAppendResponseDemographicsPerson.workerType == null : this.workerType.equals(demographicsAppendResponseDemographicsPerson.workerType)) &&
        (this.percentMailOrderRespondent == null ? demographicsAppendResponseDemographicsPerson.percentMailOrderRespondent == null : this.percentMailOrderRespondent.equals(demographicsAppendResponseDemographicsPerson.percentMailOrderRespondent)) &&
        (this.language == null ? demographicsAppendResponseDemographicsPerson.language == null : this.language.equals(demographicsAppendResponseDemographicsPerson.language)) &&
        (this.finances == null ? demographicsAppendResponseDemographicsPerson.finances == null : this.finances.equals(demographicsAppendResponseDemographicsPerson.finances)) &&
        (this.isSenior == null ? demographicsAppendResponseDemographicsPerson.isSenior == null : this.isSenior.equals(demographicsAppendResponseDemographicsPerson.isSenior)) &&
        (this.age == null ? demographicsAppendResponseDemographicsPerson.age == null : this.age.equals(demographicsAppendResponseDemographicsPerson.age));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.education == null ? 0: this.education.hashCode());
    result = 31 * result + (this.gender == null ? 0: this.gender.hashCode());
    result = 31 * result + (this.ethnicity == null ? 0: this.ethnicity.hashCode());
    result = 31 * result + (this.race == null ? 0: this.race.hashCode());
    result = 31 * result + (this.dateOfBirth == null ? 0: this.dateOfBirth.hashCode());
    result = 31 * result + (this.workerType == null ? 0: this.workerType.hashCode());
    result = 31 * result + (this.percentMailOrderRespondent == null ? 0: this.percentMailOrderRespondent.hashCode());
    result = 31 * result + (this.language == null ? 0: this.language.hashCode());
    result = 31 * result + (this.finances == null ? 0: this.finances.hashCode());
    result = 31 * result + (this.isSenior == null ? 0: this.isSenior.hashCode());
    result = 31 * result + (this.age == null ? 0: this.age.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemographicsAppendResponseDemographicsPerson {\n");
    
    sb.append("  education: ").append(education).append("\n");
    sb.append("  gender: ").append(gender).append("\n");
    sb.append("  ethnicity: ").append(ethnicity).append("\n");
    sb.append("  race: ").append(race).append("\n");
    sb.append("  dateOfBirth: ").append(dateOfBirth).append("\n");
    sb.append("  workerType: ").append(workerType).append("\n");
    sb.append("  percentMailOrderRespondent: ").append(percentMailOrderRespondent).append("\n");
    sb.append("  language: ").append(language).append("\n");
    sb.append("  finances: ").append(finances).append("\n");
    sb.append("  isSenior: ").append(isSenior).append("\n");
    sb.append("  age: ").append(age).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
