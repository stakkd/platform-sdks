"""
    Stakkd API

    # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io)   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from Stakkd.api_client import ApiClient, Endpoint as _Endpoint
from Stakkd.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from Stakkd.model.disconnect_verify_request import DisconnectVerifyRequest
from Stakkd.model.disconnect_verify_response import DisconnectVerifyResponse
from Stakkd.model.email_verify_request import EmailVerifyRequest
from Stakkd.model.email_verify_response import EmailVerifyResponse
from Stakkd.model.phone_verify_request import PhoneVerifyRequest
from Stakkd.model.phone_verify_response import PhoneVerifyResponse
from Stakkd.model.tcpa_verify_request import TcpaVerifyRequest
from Stakkd.model.tcpa_verify_response import TcpaVerifyResponse


class VerifyApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.verify_disconnect_post_endpoint = _Endpoint(
            settings={
                'response_type': (DisconnectVerifyResponse,),
                'auth': [
                    'apiKey'
                ],
                'endpoint_path': '/verify/disconnect',
                'operation_id': 'verify_disconnect_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'x_api_key',
                    'disconnect_verify_request',
                ],
                'required': [
                    'content_type',
                    'x_api_key',
                    'disconnect_verify_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'x_api_key':
                        (str,),
                    'disconnect_verify_request':
                        (DisconnectVerifyRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                    'x_api_key': 'x-api-key',
                },
                'location_map': {
                    'content_type': 'header',
                    'x_api_key': 'header',
                    'disconnect_verify_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.verify_email_post_endpoint = _Endpoint(
            settings={
                'response_type': (EmailVerifyResponse,),
                'auth': [
                    'apiKey'
                ],
                'endpoint_path': '/verify/email',
                'operation_id': 'verify_email_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'x_api_key',
                    'email_verify_request',
                ],
                'required': [
                    'content_type',
                    'x_api_key',
                    'email_verify_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'x_api_key':
                        (str,),
                    'email_verify_request':
                        (EmailVerifyRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                    'x_api_key': 'x-api-key',
                },
                'location_map': {
                    'content_type': 'header',
                    'x_api_key': 'header',
                    'email_verify_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.verify_phone_post_endpoint = _Endpoint(
            settings={
                'response_type': (PhoneVerifyResponse,),
                'auth': [
                    'apiKey'
                ],
                'endpoint_path': '/verify/phone',
                'operation_id': 'verify_phone_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'x_api_key',
                    'phone_verify_request',
                ],
                'required': [
                    'content_type',
                    'x_api_key',
                    'phone_verify_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'x_api_key':
                        (str,),
                    'phone_verify_request':
                        (PhoneVerifyRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                    'x_api_key': 'x-api-key',
                },
                'location_map': {
                    'content_type': 'header',
                    'x_api_key': 'header',
                    'phone_verify_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.verify_tcpa_post_endpoint = _Endpoint(
            settings={
                'response_type': (TcpaVerifyResponse,),
                'auth': [
                    'apiKey'
                ],
                'endpoint_path': '/verify/tcpa',
                'operation_id': 'verify_tcpa_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'content_type',
                    'x_api_key',
                    'tcpa_verify_request',
                ],
                'required': [
                    'content_type',
                    'x_api_key',
                    'tcpa_verify_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'content_type':
                        (str,),
                    'x_api_key':
                        (str,),
                    'tcpa_verify_request':
                        (TcpaVerifyRequest,),
                },
                'attribute_map': {
                    'content_type': 'Content-Type',
                    'x_api_key': 'x-api-key',
                },
                'location_map': {
                    'content_type': 'header',
                    'x_api_key': 'header',
                    'tcpa_verify_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def verify_disconnect_post(
        self,
        content_type,
        x_api_key,
        disconnect_verify_request,
        **kwargs
    ):
        """verify_disconnect_post  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.verify_disconnect_post(content_type, x_api_key, disconnect_verify_request, async_req=True)
        >>> result = thread.get()

        Args:
            content_type (str):
            x_api_key (str):
            disconnect_verify_request (DisconnectVerifyRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            DisconnectVerifyResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['content_type'] = \
            content_type
        kwargs['x_api_key'] = \
            x_api_key
        kwargs['disconnect_verify_request'] = \
            disconnect_verify_request
        return self.verify_disconnect_post_endpoint.call_with_http_info(**kwargs)

    def verify_email_post(
        self,
        content_type,
        x_api_key,
        email_verify_request,
        **kwargs
    ):
        """verify_email_post  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.verify_email_post(content_type, x_api_key, email_verify_request, async_req=True)
        >>> result = thread.get()

        Args:
            content_type (str):
            x_api_key (str):
            email_verify_request (EmailVerifyRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            EmailVerifyResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['content_type'] = \
            content_type
        kwargs['x_api_key'] = \
            x_api_key
        kwargs['email_verify_request'] = \
            email_verify_request
        return self.verify_email_post_endpoint.call_with_http_info(**kwargs)

    def verify_phone_post(
        self,
        content_type,
        x_api_key,
        phone_verify_request,
        **kwargs
    ):
        """verify_phone_post  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.verify_phone_post(content_type, x_api_key, phone_verify_request, async_req=True)
        >>> result = thread.get()

        Args:
            content_type (str):
            x_api_key (str):
            phone_verify_request (PhoneVerifyRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PhoneVerifyResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['content_type'] = \
            content_type
        kwargs['x_api_key'] = \
            x_api_key
        kwargs['phone_verify_request'] = \
            phone_verify_request
        return self.verify_phone_post_endpoint.call_with_http_info(**kwargs)

    def verify_tcpa_post(
        self,
        content_type,
        x_api_key,
        tcpa_verify_request,
        **kwargs
    ):
        """verify_tcpa_post  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.verify_tcpa_post(content_type, x_api_key, tcpa_verify_request, async_req=True)
        >>> result = thread.get()

        Args:
            content_type (str):
            x_api_key (str):
            tcpa_verify_request (TcpaVerifyRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            TcpaVerifyResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['content_type'] = \
            content_type
        kwargs['x_api_key'] = \
            x_api_key
        kwargs['tcpa_verify_request'] = \
            tcpa_verify_request
        return self.verify_tcpa_post_endpoint.call_with_http_info(**kwargs)

