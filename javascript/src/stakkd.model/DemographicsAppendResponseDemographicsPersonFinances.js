/**
 * Stakkd API
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DemographicsAppendResponseDemographicsPersonFinances model module.
 * @module stakkd.model/DemographicsAppendResponseDemographicsPersonFinances
 * @version v1
 */
class DemographicsAppendResponseDemographicsPersonFinances {
    /**
     * Constructs a new <code>DemographicsAppendResponseDemographicsPersonFinances</code>.
     * @alias module:stakkd.model/DemographicsAppendResponseDemographicsPersonFinances
     */
    constructor() { 
        
        DemographicsAppendResponseDemographicsPersonFinances.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DemographicsAppendResponseDemographicsPersonFinances</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:stakkd.model/DemographicsAppendResponseDemographicsPersonFinances} obj Optional instance to populate.
     * @return {module:stakkd.model/DemographicsAppendResponseDemographicsPersonFinances} The populated <code>DemographicsAppendResponseDemographicsPersonFinances</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DemographicsAppendResponseDemographicsPersonFinances();

            if (data.hasOwnProperty('estimatedIncome')) {
                obj['estimatedIncome'] = ApiClient.convertToType(data['estimatedIncome'], 'String');
            }
            if (data.hasOwnProperty('estimatedNetWorth')) {
                obj['estimatedNetWorth'] = ApiClient.convertToType(data['estimatedNetWorth'], 'String');
            }
            if (data.hasOwnProperty('isCharityDonar')) {
                obj['isCharityDonar'] = ApiClient.convertToType(data['isCharityDonar'], 'Boolean');
            }
            if (data.hasOwnProperty('usesCreditCard')) {
                obj['usesCreditCard'] = ApiClient.convertToType(data['usesCreditCard'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The estimated income of the person, where: A = < $20, 000; B = $20, 000 - $29, 999; C = $30, 000 - $39, 999; D = $40, 000 - $49, 999; E = $50, 000 - $74, 999; F = $75, 000 - $99, 999; G = $100, 000 - $124, 999; H = $125, 000 - $149, 999; I = > $149,999.
 * @member {module:stakkd.model/DemographicsAppendResponseDemographicsPersonFinances.EstimatedIncomeEnum} estimatedIncome
 */
DemographicsAppendResponseDemographicsPersonFinances.prototype['estimatedIncome'] = undefined;

/**
 * The estimated net worth of the person, where: A = < $5k; B = $5k - $19k; C = $20k - $49k; D = $50k - $80k; E = $81k - $99k; F = $100k - $249k; G = $250k - $499k; H = > $500k.
 * @member {module:stakkd.model/DemographicsAppendResponseDemographicsPersonFinances.EstimatedNetWorthEnum} estimatedNetWorth
 */
DemographicsAppendResponseDemographicsPersonFinances.prototype['estimatedNetWorth'] = undefined;

/**
 * Indicates whether the person is flagged as a charity donar.
 * @member {Boolean} isCharityDonar
 */
DemographicsAppendResponseDemographicsPersonFinances.prototype['isCharityDonar'] = undefined;

/**
 * Indicates whether the person is flagged as a credit card user.
 * @member {Boolean} usesCreditCard
 */
DemographicsAppendResponseDemographicsPersonFinances.prototype['usesCreditCard'] = undefined;





/**
 * Allowed values for the <code>estimatedIncome</code> property.
 * @enum {String}
 * @readonly
 */
DemographicsAppendResponseDemographicsPersonFinances['EstimatedIncomeEnum'] = {

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "B"
     * @const
     */
    "B": "B",

    /**
     * value: "C"
     * @const
     */
    "C": "C",

    /**
     * value: "D"
     * @const
     */
    "D": "D",

    /**
     * value: "E"
     * @const
     */
    "E": "E",

    /**
     * value: "F"
     * @const
     */
    "F": "F",

    /**
     * value: "G"
     * @const
     */
    "G": "G",

    /**
     * value: "H"
     * @const
     */
    "H": "H",

    /**
     * value: "I"
     * @const
     */
    "I": "I"
};


/**
 * Allowed values for the <code>estimatedNetWorth</code> property.
 * @enum {String}
 * @readonly
 */
DemographicsAppendResponseDemographicsPersonFinances['EstimatedNetWorthEnum'] = {

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "B"
     * @const
     */
    "B": "B",

    /**
     * value: "C"
     * @const
     */
    "C": "C",

    /**
     * value: "D"
     * @const
     */
    "D": "D",

    /**
     * value: "E"
     * @const
     */
    "E": "E",

    /**
     * value: "F"
     * @const
     */
    "F": "F",

    /**
     * value: "G"
     * @const
     */
    "G": "G",

    /**
     * value: "H"
     * @const
     */
    "H": "H"
};



export default DemographicsAppendResponseDemographicsPersonFinances;

