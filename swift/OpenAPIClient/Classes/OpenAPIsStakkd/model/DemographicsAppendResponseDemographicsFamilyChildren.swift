//
// DemographicsAppendResponseDemographicsFamilyChildren.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DemographicsAppendResponseDemographicsFamilyChildren: Codable, JSONEncodable, Hashable {

    public enum ChildrenAge: String, Codable, CaseIterable {
        case a = "A"
        case b = "B"
        case c = "C"
        case d = "D"
    }
    public enum NumberChildren: String, Codable, CaseIterable {
        case a = "A"
        case b = "B"
        case c = "C"
    }
    /** Indicates whether the person is flagged as having children. */
    public var hasChildren: Bool?
    /** The age range of the children for the person, where A = under 5 years old; B = between 6 and 10 years old; C = between 11 and 15 years old; D = above 15 years old. */
    public var childrenAge: ChildrenAge?
    /** The number of children for the person, where A = no children; B = less than 3 children; C = between 3 and 5 children. */
    public var numberChildren: NumberChildren?

    public init(hasChildren: Bool? = nil, childrenAge: ChildrenAge? = nil, numberChildren: NumberChildren? = nil) {
        self.hasChildren = hasChildren
        self.childrenAge = childrenAge
        self.numberChildren = numberChildren
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hasChildren
        case childrenAge
        case numberChildren
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(hasChildren, forKey: .hasChildren)
        try container.encodeIfPresent(childrenAge, forKey: .childrenAge)
        try container.encodeIfPresent(numberChildren, forKey: .numberChildren)
    }
}

