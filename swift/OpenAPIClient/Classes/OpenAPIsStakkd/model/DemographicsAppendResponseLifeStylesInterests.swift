//
// DemographicsAppendResponseLifeStylesInterests.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DemographicsAppendResponseLifeStylesInterests: Codable, JSONEncodable, Hashable {

    public enum HomeAndGarden: String, Codable, CaseIterable {
        case sewingandknitting = "SEWINGANDKNITTING"
        case woodworking = "WOODWORKING"
        case photography = "PHOTOGRAPHY"
        case homeandgarden = "HOMEANDGARDEN"
    }
    public enum Sports: String, Codable, CaseIterable {
        case generalinterest = "GENERALINTEREST"
        case football = "FOOTBALL"
        case baseball = "BASEBALL"
        case golf = "GOLF"
        case tennis = "TENNIS"
        case racing = "RACING"
    }
    public enum SelfImprovement: String, Codable, CaseIterable {
        case healthandmedical = "HEALTHANDMEDICAL"
        case dietingweightloss = "DIETINGWEIGHTLOSS"
        case selfimprovement = "SELFIMPROVEMENT"
    }
    public enum Collectibles: String, Codable, CaseIterable {
        case generalinterest = "GENERALINTEREST"
        case antiquesinterest = "ANTIQUESINTEREST"
        case sportsinterest = "SPORTSINTEREST"
    }
    public enum Outdoors: String, Codable, CaseIterable {
        case generalinterest = "GENERALINTEREST"
        case snowsports = "SNOWSPORTS"
        case watersports = "WATERSPORTS"
        case huntingandfishing = "HUNTINGANDFISHING"
    }
    public enum Fitness: String, Codable, CaseIterable {
        case healthexercise = "HEALTHEXERCISE"
        case running = "RUNNING"
        case walking = "WALKING"
        case aerobics = "AEROBICS"
    }
    public enum HomeImprovement: String, Codable, CaseIterable {
        case generalinterest = "GENERALINTEREST"
        case diyinterest = "DIYINTEREST"
    }
    public enum Cooking: String, Codable, CaseIterable {
        case gourmetfoodandwine = "GOURMETFOODANDWINE"
        case cooking = "COOKING"
        case naturalfoods = "NATURALFOODS"
    }
    public enum Travel: String, Codable, CaseIterable {
        case travel = "TRAVEL"
        case domestic = "DOMESTIC"
        case international = "INTERNATIONAL"
        case cruise = "CRUISE"
    }
    public enum Arts: String, Codable, CaseIterable {
        case artsinterest = "ARTSINTEREST"
        case avidmusiclistener = "AVIDMUSICLISTENER"
        case antiquesinterest = "ANTIQUESINTEREST"
        case performingartsinterest = "PERFORMINGARTSINTEREST"
    }
    /** The type of home and garden activities the person has an interest in. */
    public var homeAndGarden: HomeAndGarden?
    /** Indicates whether the person is flagged as a having an interest in motorcycling. */
    public var motorcycling: Bool?
    /** The type of sports the person has an interest in. */
    public var sports: Sports?
    /** The type of self improvement activities the person has an interest in. */
    public var selfImprovement: SelfImprovement?
    /** Indicates whether the person is flagged as a having an interest in gambling. */
    public var gambling: Bool?
    /** The type of collectibles the person has an interest in. */
    public var collectibles: Collectibles?
    /** Indicates whether the person is flagged as a having an interest in technology. */
    public var technology: Bool?
    /** The type of outdoors activities the person has an interest in. */
    public var outdoors: Outdoors?
    /** The type of fitness activities the person has an interest in. */
    public var fitness: Fitness?
    /** The type of home improvement activities the person has an interest in. */
    public var homeImprovement: HomeImprovement?
    /** The type of food and cooking the person has an interest in. */
    public var cooking: Cooking?
    /** Indicates whether the person is flagged as a having an interest in automobile parts. */
    public var autoParts: Bool?
    /** Indicates whether the person is flagged as a having an interest in investing. */
    public var investing: Bool?
    /** Indicates whether the person is flagged as a having an interest in boating. */
    public var boating: Bool?
    /** The type of traveling the person has an interest in. */
    public var travel: Travel?
    /** The type of arts the person has an interest in. */
    public var arts: Arts?

    public init(homeAndGarden: HomeAndGarden? = nil, motorcycling: Bool? = nil, sports: Sports? = nil, selfImprovement: SelfImprovement? = nil, gambling: Bool? = nil, collectibles: Collectibles? = nil, technology: Bool? = nil, outdoors: Outdoors? = nil, fitness: Fitness? = nil, homeImprovement: HomeImprovement? = nil, cooking: Cooking? = nil, autoParts: Bool? = nil, investing: Bool? = nil, boating: Bool? = nil, travel: Travel? = nil, arts: Arts? = nil) {
        self.homeAndGarden = homeAndGarden
        self.motorcycling = motorcycling
        self.sports = sports
        self.selfImprovement = selfImprovement
        self.gambling = gambling
        self.collectibles = collectibles
        self.technology = technology
        self.outdoors = outdoors
        self.fitness = fitness
        self.homeImprovement = homeImprovement
        self.cooking = cooking
        self.autoParts = autoParts
        self.investing = investing
        self.boating = boating
        self.travel = travel
        self.arts = arts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case homeAndGarden
        case motorcycling
        case sports
        case selfImprovement
        case gambling
        case collectibles
        case technology
        case outdoors
        case fitness
        case homeImprovement
        case cooking
        case autoParts
        case investing
        case boating
        case travel
        case arts
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(homeAndGarden, forKey: .homeAndGarden)
        try container.encodeIfPresent(motorcycling, forKey: .motorcycling)
        try container.encodeIfPresent(sports, forKey: .sports)
        try container.encodeIfPresent(selfImprovement, forKey: .selfImprovement)
        try container.encodeIfPresent(gambling, forKey: .gambling)
        try container.encodeIfPresent(collectibles, forKey: .collectibles)
        try container.encodeIfPresent(technology, forKey: .technology)
        try container.encodeIfPresent(outdoors, forKey: .outdoors)
        try container.encodeIfPresent(fitness, forKey: .fitness)
        try container.encodeIfPresent(homeImprovement, forKey: .homeImprovement)
        try container.encodeIfPresent(cooking, forKey: .cooking)
        try container.encodeIfPresent(autoParts, forKey: .autoParts)
        try container.encodeIfPresent(investing, forKey: .investing)
        try container.encodeIfPresent(boating, forKey: .boating)
        try container.encodeIfPresent(travel, forKey: .travel)
        try container.encodeIfPresent(arts, forKey: .arts)
    }
}

