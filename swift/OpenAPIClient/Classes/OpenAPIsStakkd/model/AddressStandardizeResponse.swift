//
// AddressStandardizeResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AddressStandardizeResponse: Codable, JSONEncodable, Hashable {

    /** The address zipcode. */
    public var zipcode: String?
    /** The address unit number. */
    public var unitNumber: String?
    /** The address city. */
    public var city: String?
    /** The address street postfix direction, usually: N, S, E, or W. */
    public var postDirection: String?
    /** The address number. */
    public var streetNumber: String?
    /** The address street prefix direction, usually: N, S, E, or W. */
    public var preDirection: String?
    /** The address street type. */
    public var streetType: String?
    /** The address state, abbreviated. */
    public var state: String?
    /** The address unit type, for example: Apt, Suite, ect. */
    public var unitType: String?
    /** The address street name. */
    public var streetName: String?

    public init(zipcode: String? = nil, unitNumber: String? = nil, city: String? = nil, postDirection: String? = nil, streetNumber: String? = nil, preDirection: String? = nil, streetType: String? = nil, state: String? = nil, unitType: String? = nil, streetName: String? = nil) {
        self.zipcode = zipcode
        self.unitNumber = unitNumber
        self.city = city
        self.postDirection = postDirection
        self.streetNumber = streetNumber
        self.preDirection = preDirection
        self.streetType = streetType
        self.state = state
        self.unitType = unitType
        self.streetName = streetName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case zipcode
        case unitNumber
        case city
        case postDirection
        case streetNumber
        case preDirection
        case streetType
        case state
        case unitType
        case streetName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(zipcode, forKey: .zipcode)
        try container.encodeIfPresent(unitNumber, forKey: .unitNumber)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(postDirection, forKey: .postDirection)
        try container.encodeIfPresent(streetNumber, forKey: .streetNumber)
        try container.encodeIfPresent(preDirection, forKey: .preDirection)
        try container.encodeIfPresent(streetType, forKey: .streetType)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(unitType, forKey: .unitType)
        try container.encodeIfPresent(streetName, forKey: .streetName)
    }
}

