//
// DemographicsAppendRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DemographicsAppendRequest: Codable, JSONEncodable, Hashable {

    /** The zipcode to use in the request. You must provider either the zipcode, or both the city and state. */
    public var zipcode: String?
    /** The city to use in the request. You must provider either both the city and state, or the zipcode. */
    public var city: String?
    /** The address to use in the request. */
    public var address1: String
    /** The last name to use in the request. */
    public var lastName: String
    /** The state to use in the request, abbreviated. You must provider either both the city and state, or the zipcode. */
    public var state: String?
    /** The first name to use in the request. */
    public var firstName: String

    public init(zipcode: String? = nil, city: String? = nil, address1: String, lastName: String, state: String? = nil, firstName: String) {
        self.zipcode = zipcode
        self.city = city
        self.address1 = address1
        self.lastName = lastName
        self.state = state
        self.firstName = firstName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case zipcode
        case city
        case address1
        case lastName
        case state
        case firstName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(zipcode, forKey: .zipcode)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encode(address1, forKey: .address1)
        try container.encode(lastName, forKey: .lastName)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encode(firstName, forKey: .firstName)
    }
}

