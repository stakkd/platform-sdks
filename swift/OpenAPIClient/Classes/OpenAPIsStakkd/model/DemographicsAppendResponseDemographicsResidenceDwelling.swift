//
// DemographicsAppendResponseDemographicsResidenceDwelling.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DemographicsAppendResponseDemographicsResidenceDwelling: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case singlefamily = "SINGLEFAMILY"
        case multiplefamily = "MULTIPLEFAMILY"
    }
    /** The Penetration Percentage for indicating whether the residence is a single family dwelling, +/- 3%. */
    public var percentSingleFamily: Int?
    /** The type of dwelling for the residence. */
    public var type: ModelType?
    /** The Penetration Percentage for indicating whether the residence is a multiple family dwelling, +/- 3%. */
    public var percentMultipleFamily: Int?

    public init(percentSingleFamily: Int? = nil, type: ModelType? = nil, percentMultipleFamily: Int? = nil) {
        self.percentSingleFamily = percentSingleFamily
        self.type = type
        self.percentMultipleFamily = percentMultipleFamily
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case percentSingleFamily
        case type
        case percentMultipleFamily
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(percentSingleFamily, forKey: .percentSingleFamily)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(percentMultipleFamily, forKey: .percentMultipleFamily)
    }
}

