//
// DemographicsAppendResponseDemographicsFamily.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DemographicsAppendResponseDemographicsFamily: Codable, JSONEncodable, Hashable {

    public enum Married: String, Codable, CaseIterable {
        case inferredmarried = "INFERREDMARRIED"
        case inferredsingle = "INFERREDSINGLE"
        case single = "SINGLE"
        case married = "MARRIED"
    }
    /** Indicates whether the person is flagged as being a single parent. */
    public var isSingleParent: Bool?
    public var children: DemographicsAppendResponseDemographicsFamilyChildren?
    /** The marital status for the person. */
    public var married: Married?

    public init(isSingleParent: Bool? = nil, children: DemographicsAppendResponseDemographicsFamilyChildren? = nil, married: Married? = nil) {
        self.isSingleParent = isSingleParent
        self.children = children
        self.married = married
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isSingleParent
        case children
        case married
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(isSingleParent, forKey: .isSingleParent)
        try container.encodeIfPresent(children, forKey: .children)
        try container.encodeIfPresent(married, forKey: .married)
    }
}

