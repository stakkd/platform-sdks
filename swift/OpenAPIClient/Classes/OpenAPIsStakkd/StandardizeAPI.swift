//
// StandardizeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StandardizeAPI {

    /**

     - parameter contentType: (header)  
     - parameter xApiKey: (header)  
     - parameter addressStandardizeRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func standardizeAddressPost(contentType: String, xApiKey: String, addressStandardizeRequest: AddressStandardizeRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AddressStandardizeResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return standardizeAddressPostWithRequestBuilder(contentType: contentType, xApiKey: xApiKey, addressStandardizeRequest: addressStandardizeRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - POST /standardize/address
     - API Key:
       - type: apiKey x-api-key 
       - name: apiKey
     - parameter contentType: (header)  
     - parameter xApiKey: (header)  
     - parameter addressStandardizeRequest: (body)  
     - returns: RequestBuilder<AddressStandardizeResponse> 
     */
    open class func standardizeAddressPostWithRequestBuilder(contentType: String, xApiKey: String, addressStandardizeRequest: AddressStandardizeRequest) -> RequestBuilder<AddressStandardizeResponse> {
        let localVariablePath = "/standardize/address"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addressStandardizeRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": contentType.encodeToJSON(),
            "x-api-key": xApiKey.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AddressStandardizeResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
