/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// SkipTracingLookupResponseNames struct for SkipTracingLookupResponseNames
type SkipTracingLookupResponseNames struct {
	// A list of the person's aliases.
	Aliases []SkipTracingLookupResponseNamesAliases `json:"aliases,omitempty"`
	PrimaryName *SkipTracingLookupResponseNamesAliases `json:"primaryName,omitempty"`
}

// NewSkipTracingLookupResponseNames instantiates a new SkipTracingLookupResponseNames object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkipTracingLookupResponseNames() *SkipTracingLookupResponseNames {
	this := SkipTracingLookupResponseNames{}
	return &this
}

// NewSkipTracingLookupResponseNamesWithDefaults instantiates a new SkipTracingLookupResponseNames object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkipTracingLookupResponseNamesWithDefaults() *SkipTracingLookupResponseNames {
	this := SkipTracingLookupResponseNames{}
	return &this
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *SkipTracingLookupResponseNames) GetAliases() []SkipTracingLookupResponseNamesAliases {
	if o == nil || o.Aliases == nil {
		var ret []SkipTracingLookupResponseNamesAliases
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkipTracingLookupResponseNames) GetAliasesOk() ([]SkipTracingLookupResponseNamesAliases, bool) {
	if o == nil || o.Aliases == nil {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *SkipTracingLookupResponseNames) HasAliases() bool {
	if o != nil && o.Aliases != nil {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []SkipTracingLookupResponseNamesAliases and assigns it to the Aliases field.
func (o *SkipTracingLookupResponseNames) SetAliases(v []SkipTracingLookupResponseNamesAliases) {
	o.Aliases = v
}

// GetPrimaryName returns the PrimaryName field value if set, zero value otherwise.
func (o *SkipTracingLookupResponseNames) GetPrimaryName() SkipTracingLookupResponseNamesAliases {
	if o == nil || o.PrimaryName == nil {
		var ret SkipTracingLookupResponseNamesAliases
		return ret
	}
	return *o.PrimaryName
}

// GetPrimaryNameOk returns a tuple with the PrimaryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkipTracingLookupResponseNames) GetPrimaryNameOk() (*SkipTracingLookupResponseNamesAliases, bool) {
	if o == nil || o.PrimaryName == nil {
		return nil, false
	}
	return o.PrimaryName, true
}

// HasPrimaryName returns a boolean if a field has been set.
func (o *SkipTracingLookupResponseNames) HasPrimaryName() bool {
	if o != nil && o.PrimaryName != nil {
		return true
	}

	return false
}

// SetPrimaryName gets a reference to the given SkipTracingLookupResponseNamesAliases and assigns it to the PrimaryName field.
func (o *SkipTracingLookupResponseNames) SetPrimaryName(v SkipTracingLookupResponseNamesAliases) {
	o.PrimaryName = &v
}

func (o SkipTracingLookupResponseNames) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	if o.PrimaryName != nil {
		toSerialize["primaryName"] = o.PrimaryName
	}
	return json.Marshal(toSerialize)
}

type NullableSkipTracingLookupResponseNames struct {
	value *SkipTracingLookupResponseNames
	isSet bool
}

func (v NullableSkipTracingLookupResponseNames) Get() *SkipTracingLookupResponseNames {
	return v.value
}

func (v *NullableSkipTracingLookupResponseNames) Set(val *SkipTracingLookupResponseNames) {
	v.value = val
	v.isSet = true
}

func (v NullableSkipTracingLookupResponseNames) IsSet() bool {
	return v.isSet
}

func (v *NullableSkipTracingLookupResponseNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkipTracingLookupResponseNames(val *SkipTracingLookupResponseNames) *NullableSkipTracingLookupResponseNames {
	return &NullableSkipTracingLookupResponseNames{value: val, isSet: true}
}

func (v NullableSkipTracingLookupResponseNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkipTracingLookupResponseNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


