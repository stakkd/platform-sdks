/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// DemographicsAppendResponseLifeStylesInterests struct for DemographicsAppendResponseLifeStylesInterests
type DemographicsAppendResponseLifeStylesInterests struct {
	// The type of home and garden activities the person has an interest in.
	HomeAndGarden *string `json:"homeAndGarden,omitempty"`
	// Indicates whether the person is flagged as a having an interest in motorcycling.
	Motorcycling *bool `json:"motorcycling,omitempty"`
	// The type of sports the person has an interest in.
	Sports *string `json:"sports,omitempty"`
	// The type of self improvement activities the person has an interest in.
	SelfImprovement *string `json:"selfImprovement,omitempty"`
	// Indicates whether the person is flagged as a having an interest in gambling.
	Gambling *bool `json:"gambling,omitempty"`
	// The type of collectibles the person has an interest in.
	Collectibles *string `json:"collectibles,omitempty"`
	// Indicates whether the person is flagged as a having an interest in technology.
	Technology *bool `json:"technology,omitempty"`
	// The type of outdoors activities the person has an interest in.
	Outdoors *string `json:"outdoors,omitempty"`
	// The type of fitness activities the person has an interest in.
	Fitness *string `json:"fitness,omitempty"`
	// The type of home improvement activities the person has an interest in.
	HomeImprovement *string `json:"homeImprovement,omitempty"`
	// The type of food and cooking the person has an interest in.
	Cooking *string `json:"cooking,omitempty"`
	// Indicates whether the person is flagged as a having an interest in automobile parts.
	AutoParts *bool `json:"autoParts,omitempty"`
	// Indicates whether the person is flagged as a having an interest in investing.
	Investing *bool `json:"investing,omitempty"`
	// Indicates whether the person is flagged as a having an interest in boating.
	Boating *bool `json:"boating,omitempty"`
	// The type of traveling the person has an interest in.
	Travel *string `json:"travel,omitempty"`
	// The type of arts the person has an interest in.
	Arts *string `json:"arts,omitempty"`
}

// NewDemographicsAppendResponseLifeStylesInterests instantiates a new DemographicsAppendResponseLifeStylesInterests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemographicsAppendResponseLifeStylesInterests() *DemographicsAppendResponseLifeStylesInterests {
	this := DemographicsAppendResponseLifeStylesInterests{}
	return &this
}

// NewDemographicsAppendResponseLifeStylesInterestsWithDefaults instantiates a new DemographicsAppendResponseLifeStylesInterests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemographicsAppendResponseLifeStylesInterestsWithDefaults() *DemographicsAppendResponseLifeStylesInterests {
	this := DemographicsAppendResponseLifeStylesInterests{}
	return &this
}

// GetHomeAndGarden returns the HomeAndGarden field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetHomeAndGarden() string {
	if o == nil || o.HomeAndGarden == nil {
		var ret string
		return ret
	}
	return *o.HomeAndGarden
}

// GetHomeAndGardenOk returns a tuple with the HomeAndGarden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetHomeAndGardenOk() (*string, bool) {
	if o == nil || o.HomeAndGarden == nil {
		return nil, false
	}
	return o.HomeAndGarden, true
}

// HasHomeAndGarden returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasHomeAndGarden() bool {
	if o != nil && o.HomeAndGarden != nil {
		return true
	}

	return false
}

// SetHomeAndGarden gets a reference to the given string and assigns it to the HomeAndGarden field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetHomeAndGarden(v string) {
	o.HomeAndGarden = &v
}

// GetMotorcycling returns the Motorcycling field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetMotorcycling() bool {
	if o == nil || o.Motorcycling == nil {
		var ret bool
		return ret
	}
	return *o.Motorcycling
}

// GetMotorcyclingOk returns a tuple with the Motorcycling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetMotorcyclingOk() (*bool, bool) {
	if o == nil || o.Motorcycling == nil {
		return nil, false
	}
	return o.Motorcycling, true
}

// HasMotorcycling returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasMotorcycling() bool {
	if o != nil && o.Motorcycling != nil {
		return true
	}

	return false
}

// SetMotorcycling gets a reference to the given bool and assigns it to the Motorcycling field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetMotorcycling(v bool) {
	o.Motorcycling = &v
}

// GetSports returns the Sports field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetSports() string {
	if o == nil || o.Sports == nil {
		var ret string
		return ret
	}
	return *o.Sports
}

// GetSportsOk returns a tuple with the Sports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetSportsOk() (*string, bool) {
	if o == nil || o.Sports == nil {
		return nil, false
	}
	return o.Sports, true
}

// HasSports returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasSports() bool {
	if o != nil && o.Sports != nil {
		return true
	}

	return false
}

// SetSports gets a reference to the given string and assigns it to the Sports field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetSports(v string) {
	o.Sports = &v
}

// GetSelfImprovement returns the SelfImprovement field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetSelfImprovement() string {
	if o == nil || o.SelfImprovement == nil {
		var ret string
		return ret
	}
	return *o.SelfImprovement
}

// GetSelfImprovementOk returns a tuple with the SelfImprovement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetSelfImprovementOk() (*string, bool) {
	if o == nil || o.SelfImprovement == nil {
		return nil, false
	}
	return o.SelfImprovement, true
}

// HasSelfImprovement returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasSelfImprovement() bool {
	if o != nil && o.SelfImprovement != nil {
		return true
	}

	return false
}

// SetSelfImprovement gets a reference to the given string and assigns it to the SelfImprovement field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetSelfImprovement(v string) {
	o.SelfImprovement = &v
}

// GetGambling returns the Gambling field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetGambling() bool {
	if o == nil || o.Gambling == nil {
		var ret bool
		return ret
	}
	return *o.Gambling
}

// GetGamblingOk returns a tuple with the Gambling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetGamblingOk() (*bool, bool) {
	if o == nil || o.Gambling == nil {
		return nil, false
	}
	return o.Gambling, true
}

// HasGambling returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasGambling() bool {
	if o != nil && o.Gambling != nil {
		return true
	}

	return false
}

// SetGambling gets a reference to the given bool and assigns it to the Gambling field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetGambling(v bool) {
	o.Gambling = &v
}

// GetCollectibles returns the Collectibles field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetCollectibles() string {
	if o == nil || o.Collectibles == nil {
		var ret string
		return ret
	}
	return *o.Collectibles
}

// GetCollectiblesOk returns a tuple with the Collectibles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetCollectiblesOk() (*string, bool) {
	if o == nil || o.Collectibles == nil {
		return nil, false
	}
	return o.Collectibles, true
}

// HasCollectibles returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasCollectibles() bool {
	if o != nil && o.Collectibles != nil {
		return true
	}

	return false
}

// SetCollectibles gets a reference to the given string and assigns it to the Collectibles field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetCollectibles(v string) {
	o.Collectibles = &v
}

// GetTechnology returns the Technology field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetTechnology() bool {
	if o == nil || o.Technology == nil {
		var ret bool
		return ret
	}
	return *o.Technology
}

// GetTechnologyOk returns a tuple with the Technology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetTechnologyOk() (*bool, bool) {
	if o == nil || o.Technology == nil {
		return nil, false
	}
	return o.Technology, true
}

// HasTechnology returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasTechnology() bool {
	if o != nil && o.Technology != nil {
		return true
	}

	return false
}

// SetTechnology gets a reference to the given bool and assigns it to the Technology field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetTechnology(v bool) {
	o.Technology = &v
}

// GetOutdoors returns the Outdoors field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetOutdoors() string {
	if o == nil || o.Outdoors == nil {
		var ret string
		return ret
	}
	return *o.Outdoors
}

// GetOutdoorsOk returns a tuple with the Outdoors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetOutdoorsOk() (*string, bool) {
	if o == nil || o.Outdoors == nil {
		return nil, false
	}
	return o.Outdoors, true
}

// HasOutdoors returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasOutdoors() bool {
	if o != nil && o.Outdoors != nil {
		return true
	}

	return false
}

// SetOutdoors gets a reference to the given string and assigns it to the Outdoors field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetOutdoors(v string) {
	o.Outdoors = &v
}

// GetFitness returns the Fitness field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetFitness() string {
	if o == nil || o.Fitness == nil {
		var ret string
		return ret
	}
	return *o.Fitness
}

// GetFitnessOk returns a tuple with the Fitness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetFitnessOk() (*string, bool) {
	if o == nil || o.Fitness == nil {
		return nil, false
	}
	return o.Fitness, true
}

// HasFitness returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasFitness() bool {
	if o != nil && o.Fitness != nil {
		return true
	}

	return false
}

// SetFitness gets a reference to the given string and assigns it to the Fitness field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetFitness(v string) {
	o.Fitness = &v
}

// GetHomeImprovement returns the HomeImprovement field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetHomeImprovement() string {
	if o == nil || o.HomeImprovement == nil {
		var ret string
		return ret
	}
	return *o.HomeImprovement
}

// GetHomeImprovementOk returns a tuple with the HomeImprovement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetHomeImprovementOk() (*string, bool) {
	if o == nil || o.HomeImprovement == nil {
		return nil, false
	}
	return o.HomeImprovement, true
}

// HasHomeImprovement returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasHomeImprovement() bool {
	if o != nil && o.HomeImprovement != nil {
		return true
	}

	return false
}

// SetHomeImprovement gets a reference to the given string and assigns it to the HomeImprovement field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetHomeImprovement(v string) {
	o.HomeImprovement = &v
}

// GetCooking returns the Cooking field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetCooking() string {
	if o == nil || o.Cooking == nil {
		var ret string
		return ret
	}
	return *o.Cooking
}

// GetCookingOk returns a tuple with the Cooking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetCookingOk() (*string, bool) {
	if o == nil || o.Cooking == nil {
		return nil, false
	}
	return o.Cooking, true
}

// HasCooking returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasCooking() bool {
	if o != nil && o.Cooking != nil {
		return true
	}

	return false
}

// SetCooking gets a reference to the given string and assigns it to the Cooking field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetCooking(v string) {
	o.Cooking = &v
}

// GetAutoParts returns the AutoParts field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetAutoParts() bool {
	if o == nil || o.AutoParts == nil {
		var ret bool
		return ret
	}
	return *o.AutoParts
}

// GetAutoPartsOk returns a tuple with the AutoParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetAutoPartsOk() (*bool, bool) {
	if o == nil || o.AutoParts == nil {
		return nil, false
	}
	return o.AutoParts, true
}

// HasAutoParts returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasAutoParts() bool {
	if o != nil && o.AutoParts != nil {
		return true
	}

	return false
}

// SetAutoParts gets a reference to the given bool and assigns it to the AutoParts field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetAutoParts(v bool) {
	o.AutoParts = &v
}

// GetInvesting returns the Investing field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetInvesting() bool {
	if o == nil || o.Investing == nil {
		var ret bool
		return ret
	}
	return *o.Investing
}

// GetInvestingOk returns a tuple with the Investing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetInvestingOk() (*bool, bool) {
	if o == nil || o.Investing == nil {
		return nil, false
	}
	return o.Investing, true
}

// HasInvesting returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasInvesting() bool {
	if o != nil && o.Investing != nil {
		return true
	}

	return false
}

// SetInvesting gets a reference to the given bool and assigns it to the Investing field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetInvesting(v bool) {
	o.Investing = &v
}

// GetBoating returns the Boating field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetBoating() bool {
	if o == nil || o.Boating == nil {
		var ret bool
		return ret
	}
	return *o.Boating
}

// GetBoatingOk returns a tuple with the Boating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetBoatingOk() (*bool, bool) {
	if o == nil || o.Boating == nil {
		return nil, false
	}
	return o.Boating, true
}

// HasBoating returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasBoating() bool {
	if o != nil && o.Boating != nil {
		return true
	}

	return false
}

// SetBoating gets a reference to the given bool and assigns it to the Boating field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetBoating(v bool) {
	o.Boating = &v
}

// GetTravel returns the Travel field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetTravel() string {
	if o == nil || o.Travel == nil {
		var ret string
		return ret
	}
	return *o.Travel
}

// GetTravelOk returns a tuple with the Travel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetTravelOk() (*string, bool) {
	if o == nil || o.Travel == nil {
		return nil, false
	}
	return o.Travel, true
}

// HasTravel returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasTravel() bool {
	if o != nil && o.Travel != nil {
		return true
	}

	return false
}

// SetTravel gets a reference to the given string and assigns it to the Travel field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetTravel(v string) {
	o.Travel = &v
}

// GetArts returns the Arts field value if set, zero value otherwise.
func (o *DemographicsAppendResponseLifeStylesInterests) GetArts() string {
	if o == nil || o.Arts == nil {
		var ret string
		return ret
	}
	return *o.Arts
}

// GetArtsOk returns a tuple with the Arts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) GetArtsOk() (*string, bool) {
	if o == nil || o.Arts == nil {
		return nil, false
	}
	return o.Arts, true
}

// HasArts returns a boolean if a field has been set.
func (o *DemographicsAppendResponseLifeStylesInterests) HasArts() bool {
	if o != nil && o.Arts != nil {
		return true
	}

	return false
}

// SetArts gets a reference to the given string and assigns it to the Arts field.
func (o *DemographicsAppendResponseLifeStylesInterests) SetArts(v string) {
	o.Arts = &v
}

func (o DemographicsAppendResponseLifeStylesInterests) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HomeAndGarden != nil {
		toSerialize["homeAndGarden"] = o.HomeAndGarden
	}
	if o.Motorcycling != nil {
		toSerialize["motorcycling"] = o.Motorcycling
	}
	if o.Sports != nil {
		toSerialize["sports"] = o.Sports
	}
	if o.SelfImprovement != nil {
		toSerialize["selfImprovement"] = o.SelfImprovement
	}
	if o.Gambling != nil {
		toSerialize["gambling"] = o.Gambling
	}
	if o.Collectibles != nil {
		toSerialize["collectibles"] = o.Collectibles
	}
	if o.Technology != nil {
		toSerialize["technology"] = o.Technology
	}
	if o.Outdoors != nil {
		toSerialize["outdoors"] = o.Outdoors
	}
	if o.Fitness != nil {
		toSerialize["fitness"] = o.Fitness
	}
	if o.HomeImprovement != nil {
		toSerialize["homeImprovement"] = o.HomeImprovement
	}
	if o.Cooking != nil {
		toSerialize["cooking"] = o.Cooking
	}
	if o.AutoParts != nil {
		toSerialize["autoParts"] = o.AutoParts
	}
	if o.Investing != nil {
		toSerialize["investing"] = o.Investing
	}
	if o.Boating != nil {
		toSerialize["boating"] = o.Boating
	}
	if o.Travel != nil {
		toSerialize["travel"] = o.Travel
	}
	if o.Arts != nil {
		toSerialize["arts"] = o.Arts
	}
	return json.Marshal(toSerialize)
}

type NullableDemographicsAppendResponseLifeStylesInterests struct {
	value *DemographicsAppendResponseLifeStylesInterests
	isSet bool
}

func (v NullableDemographicsAppendResponseLifeStylesInterests) Get() *DemographicsAppendResponseLifeStylesInterests {
	return v.value
}

func (v *NullableDemographicsAppendResponseLifeStylesInterests) Set(val *DemographicsAppendResponseLifeStylesInterests) {
	v.value = val
	v.isSet = true
}

func (v NullableDemographicsAppendResponseLifeStylesInterests) IsSet() bool {
	return v.isSet
}

func (v *NullableDemographicsAppendResponseLifeStylesInterests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemographicsAppendResponseLifeStylesInterests(val *DemographicsAppendResponseLifeStylesInterests) *NullableDemographicsAppendResponseLifeStylesInterests {
	return &NullableDemographicsAppendResponseLifeStylesInterests{value: val, isSet: true}
}

func (v NullableDemographicsAppendResponseLifeStylesInterests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemographicsAppendResponseLifeStylesInterests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


