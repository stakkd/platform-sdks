/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// VehicleAppendResponseVehicles struct for VehicleAppendResponseVehicles
type VehicleAppendResponseVehicles struct {
	Year *string `json:"year,omitempty"`
	Model *string `json:"model,omitempty"`
	Make *string `json:"make,omitempty"`
}

// NewVehicleAppendResponseVehicles instantiates a new VehicleAppendResponseVehicles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleAppendResponseVehicles() *VehicleAppendResponseVehicles {
	this := VehicleAppendResponseVehicles{}
	return &this
}

// NewVehicleAppendResponseVehiclesWithDefaults instantiates a new VehicleAppendResponseVehicles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleAppendResponseVehiclesWithDefaults() *VehicleAppendResponseVehicles {
	this := VehicleAppendResponseVehicles{}
	return &this
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *VehicleAppendResponseVehicles) GetYear() string {
	if o == nil || o.Year == nil {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleAppendResponseVehicles) GetYearOk() (*string, bool) {
	if o == nil || o.Year == nil {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *VehicleAppendResponseVehicles) HasYear() bool {
	if o != nil && o.Year != nil {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *VehicleAppendResponseVehicles) SetYear(v string) {
	o.Year = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *VehicleAppendResponseVehicles) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleAppendResponseVehicles) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *VehicleAppendResponseVehicles) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *VehicleAppendResponseVehicles) SetModel(v string) {
	o.Model = &v
}

// GetMake returns the Make field value if set, zero value otherwise.
func (o *VehicleAppendResponseVehicles) GetMake() string {
	if o == nil || o.Make == nil {
		var ret string
		return ret
	}
	return *o.Make
}

// GetMakeOk returns a tuple with the Make field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleAppendResponseVehicles) GetMakeOk() (*string, bool) {
	if o == nil || o.Make == nil {
		return nil, false
	}
	return o.Make, true
}

// HasMake returns a boolean if a field has been set.
func (o *VehicleAppendResponseVehicles) HasMake() bool {
	if o != nil && o.Make != nil {
		return true
	}

	return false
}

// SetMake gets a reference to the given string and assigns it to the Make field.
func (o *VehicleAppendResponseVehicles) SetMake(v string) {
	o.Make = &v
}

func (o VehicleAppendResponseVehicles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Year != nil {
		toSerialize["year"] = o.Year
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.Make != nil {
		toSerialize["make"] = o.Make
	}
	return json.Marshal(toSerialize)
}

type NullableVehicleAppendResponseVehicles struct {
	value *VehicleAppendResponseVehicles
	isSet bool
}

func (v NullableVehicleAppendResponseVehicles) Get() *VehicleAppendResponseVehicles {
	return v.value
}

func (v *NullableVehicleAppendResponseVehicles) Set(val *VehicleAppendResponseVehicles) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleAppendResponseVehicles) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleAppendResponseVehicles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleAppendResponseVehicles(val *VehicleAppendResponseVehicles) *NullableVehicleAppendResponseVehicles {
	return &NullableVehicleAppendResponseVehicles{value: val, isSet: true}
}

func (v NullableVehicleAppendResponseVehicles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleAppendResponseVehicles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


