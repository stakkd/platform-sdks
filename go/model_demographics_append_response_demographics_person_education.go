/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// DemographicsAppendResponseDemographicsPersonEducation struct for DemographicsAppendResponseDemographicsPersonEducation
type DemographicsAppendResponseDemographicsPersonEducation struct {
	// The highest achieved education level for the person.
	Level *string `json:"level,omitempty"`
	// The median years of schooling for the person.
	MedianYearsSchooling *int32 `json:"medianYearsSchooling,omitempty"`
}

// NewDemographicsAppendResponseDemographicsPersonEducation instantiates a new DemographicsAppendResponseDemographicsPersonEducation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemographicsAppendResponseDemographicsPersonEducation() *DemographicsAppendResponseDemographicsPersonEducation {
	this := DemographicsAppendResponseDemographicsPersonEducation{}
	return &this
}

// NewDemographicsAppendResponseDemographicsPersonEducationWithDefaults instantiates a new DemographicsAppendResponseDemographicsPersonEducation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemographicsAppendResponseDemographicsPersonEducationWithDefaults() *DemographicsAppendResponseDemographicsPersonEducation {
	this := DemographicsAppendResponseDemographicsPersonEducation{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsPersonEducation) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsPersonEducation) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsPersonEducation) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *DemographicsAppendResponseDemographicsPersonEducation) SetLevel(v string) {
	o.Level = &v
}

// GetMedianYearsSchooling returns the MedianYearsSchooling field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsPersonEducation) GetMedianYearsSchooling() int32 {
	if o == nil || o.MedianYearsSchooling == nil {
		var ret int32
		return ret
	}
	return *o.MedianYearsSchooling
}

// GetMedianYearsSchoolingOk returns a tuple with the MedianYearsSchooling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsPersonEducation) GetMedianYearsSchoolingOk() (*int32, bool) {
	if o == nil || o.MedianYearsSchooling == nil {
		return nil, false
	}
	return o.MedianYearsSchooling, true
}

// HasMedianYearsSchooling returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsPersonEducation) HasMedianYearsSchooling() bool {
	if o != nil && o.MedianYearsSchooling != nil {
		return true
	}

	return false
}

// SetMedianYearsSchooling gets a reference to the given int32 and assigns it to the MedianYearsSchooling field.
func (o *DemographicsAppendResponseDemographicsPersonEducation) SetMedianYearsSchooling(v int32) {
	o.MedianYearsSchooling = &v
}

func (o DemographicsAppendResponseDemographicsPersonEducation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.MedianYearsSchooling != nil {
		toSerialize["medianYearsSchooling"] = o.MedianYearsSchooling
	}
	return json.Marshal(toSerialize)
}

type NullableDemographicsAppendResponseDemographicsPersonEducation struct {
	value *DemographicsAppendResponseDemographicsPersonEducation
	isSet bool
}

func (v NullableDemographicsAppendResponseDemographicsPersonEducation) Get() *DemographicsAppendResponseDemographicsPersonEducation {
	return v.value
}

func (v *NullableDemographicsAppendResponseDemographicsPersonEducation) Set(val *DemographicsAppendResponseDemographicsPersonEducation) {
	v.value = val
	v.isSet = true
}

func (v NullableDemographicsAppendResponseDemographicsPersonEducation) IsSet() bool {
	return v.isSet
}

func (v *NullableDemographicsAppendResponseDemographicsPersonEducation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemographicsAppendResponseDemographicsPersonEducation(val *DemographicsAppendResponseDemographicsPersonEducation) *NullableDemographicsAppendResponseDemographicsPersonEducation {
	return &NullableDemographicsAppendResponseDemographicsPersonEducation{value: val, isSet: true}
}

func (v NullableDemographicsAppendResponseDemographicsPersonEducation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemographicsAppendResponseDemographicsPersonEducation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


