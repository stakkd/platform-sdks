/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// DemographicsAppendResponseDemographicsVehicle struct for DemographicsAppendResponseDemographicsVehicle
type DemographicsAppendResponseDemographicsVehicle struct {
	// Indicates whether the person is flagged as owning an SUV.
	OwnsSuvVehicle *bool `json:"ownsSuvVehicle,omitempty"`
	// Indicates whether the person is flagged as owning a luxury vehicle.
	OwnsLuxuryVehicle *bool `json:"ownsLuxuryVehicle,omitempty"`
	// Indicates whether the person is flagged as owning a pickup truck.
	OwnsPickupVehicle *bool `json:"ownsPickupVehicle,omitempty"`
	// The Penetration Percentage for indicating whether the person owns a vehicle, +/- 3%.
	PercentVehicleOwner *int32 `json:"percentVehicleOwner,omitempty"`
}

// NewDemographicsAppendResponseDemographicsVehicle instantiates a new DemographicsAppendResponseDemographicsVehicle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemographicsAppendResponseDemographicsVehicle() *DemographicsAppendResponseDemographicsVehicle {
	this := DemographicsAppendResponseDemographicsVehicle{}
	return &this
}

// NewDemographicsAppendResponseDemographicsVehicleWithDefaults instantiates a new DemographicsAppendResponseDemographicsVehicle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemographicsAppendResponseDemographicsVehicleWithDefaults() *DemographicsAppendResponseDemographicsVehicle {
	this := DemographicsAppendResponseDemographicsVehicle{}
	return &this
}

// GetOwnsSuvVehicle returns the OwnsSuvVehicle field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsSuvVehicle() bool {
	if o == nil || o.OwnsSuvVehicle == nil {
		var ret bool
		return ret
	}
	return *o.OwnsSuvVehicle
}

// GetOwnsSuvVehicleOk returns a tuple with the OwnsSuvVehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsSuvVehicleOk() (*bool, bool) {
	if o == nil || o.OwnsSuvVehicle == nil {
		return nil, false
	}
	return o.OwnsSuvVehicle, true
}

// HasOwnsSuvVehicle returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) HasOwnsSuvVehicle() bool {
	if o != nil && o.OwnsSuvVehicle != nil {
		return true
	}

	return false
}

// SetOwnsSuvVehicle gets a reference to the given bool and assigns it to the OwnsSuvVehicle field.
func (o *DemographicsAppendResponseDemographicsVehicle) SetOwnsSuvVehicle(v bool) {
	o.OwnsSuvVehicle = &v
}

// GetOwnsLuxuryVehicle returns the OwnsLuxuryVehicle field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsLuxuryVehicle() bool {
	if o == nil || o.OwnsLuxuryVehicle == nil {
		var ret bool
		return ret
	}
	return *o.OwnsLuxuryVehicle
}

// GetOwnsLuxuryVehicleOk returns a tuple with the OwnsLuxuryVehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsLuxuryVehicleOk() (*bool, bool) {
	if o == nil || o.OwnsLuxuryVehicle == nil {
		return nil, false
	}
	return o.OwnsLuxuryVehicle, true
}

// HasOwnsLuxuryVehicle returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) HasOwnsLuxuryVehicle() bool {
	if o != nil && o.OwnsLuxuryVehicle != nil {
		return true
	}

	return false
}

// SetOwnsLuxuryVehicle gets a reference to the given bool and assigns it to the OwnsLuxuryVehicle field.
func (o *DemographicsAppendResponseDemographicsVehicle) SetOwnsLuxuryVehicle(v bool) {
	o.OwnsLuxuryVehicle = &v
}

// GetOwnsPickupVehicle returns the OwnsPickupVehicle field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsPickupVehicle() bool {
	if o == nil || o.OwnsPickupVehicle == nil {
		var ret bool
		return ret
	}
	return *o.OwnsPickupVehicle
}

// GetOwnsPickupVehicleOk returns a tuple with the OwnsPickupVehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) GetOwnsPickupVehicleOk() (*bool, bool) {
	if o == nil || o.OwnsPickupVehicle == nil {
		return nil, false
	}
	return o.OwnsPickupVehicle, true
}

// HasOwnsPickupVehicle returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) HasOwnsPickupVehicle() bool {
	if o != nil && o.OwnsPickupVehicle != nil {
		return true
	}

	return false
}

// SetOwnsPickupVehicle gets a reference to the given bool and assigns it to the OwnsPickupVehicle field.
func (o *DemographicsAppendResponseDemographicsVehicle) SetOwnsPickupVehicle(v bool) {
	o.OwnsPickupVehicle = &v
}

// GetPercentVehicleOwner returns the PercentVehicleOwner field value if set, zero value otherwise.
func (o *DemographicsAppendResponseDemographicsVehicle) GetPercentVehicleOwner() int32 {
	if o == nil || o.PercentVehicleOwner == nil {
		var ret int32
		return ret
	}
	return *o.PercentVehicleOwner
}

// GetPercentVehicleOwnerOk returns a tuple with the PercentVehicleOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) GetPercentVehicleOwnerOk() (*int32, bool) {
	if o == nil || o.PercentVehicleOwner == nil {
		return nil, false
	}
	return o.PercentVehicleOwner, true
}

// HasPercentVehicleOwner returns a boolean if a field has been set.
func (o *DemographicsAppendResponseDemographicsVehicle) HasPercentVehicleOwner() bool {
	if o != nil && o.PercentVehicleOwner != nil {
		return true
	}

	return false
}

// SetPercentVehicleOwner gets a reference to the given int32 and assigns it to the PercentVehicleOwner field.
func (o *DemographicsAppendResponseDemographicsVehicle) SetPercentVehicleOwner(v int32) {
	o.PercentVehicleOwner = &v
}

func (o DemographicsAppendResponseDemographicsVehicle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnsSuvVehicle != nil {
		toSerialize["ownsSuvVehicle"] = o.OwnsSuvVehicle
	}
	if o.OwnsLuxuryVehicle != nil {
		toSerialize["ownsLuxuryVehicle"] = o.OwnsLuxuryVehicle
	}
	if o.OwnsPickupVehicle != nil {
		toSerialize["ownsPickupVehicle"] = o.OwnsPickupVehicle
	}
	if o.PercentVehicleOwner != nil {
		toSerialize["percentVehicleOwner"] = o.PercentVehicleOwner
	}
	return json.Marshal(toSerialize)
}

type NullableDemographicsAppendResponseDemographicsVehicle struct {
	value *DemographicsAppendResponseDemographicsVehicle
	isSet bool
}

func (v NullableDemographicsAppendResponseDemographicsVehicle) Get() *DemographicsAppendResponseDemographicsVehicle {
	return v.value
}

func (v *NullableDemographicsAppendResponseDemographicsVehicle) Set(val *DemographicsAppendResponseDemographicsVehicle) {
	v.value = val
	v.isSet = true
}

func (v NullableDemographicsAppendResponseDemographicsVehicle) IsSet() bool {
	return v.isSet
}

func (v *NullableDemographicsAppendResponseDemographicsVehicle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemographicsAppendResponseDemographicsVehicle(val *DemographicsAppendResponseDemographicsVehicle) *NullableDemographicsAppendResponseDemographicsVehicle {
	return &NullableDemographicsAppendResponseDemographicsVehicle{value: val, isSet: true}
}

func (v NullableDemographicsAppendResponseDemographicsVehicle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemographicsAppendResponseDemographicsVehicle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


