/*
Stakkd API

# Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Stakkd

import (
	"encoding/json"
)

// DisconnectVerifyResponsePhone struct for DisconnectVerifyResponsePhone
type DisconnectVerifyResponsePhone struct {
	// The phone type, where: L = 'Landline', V = 'VoIP', W = 'Wireless', and O = 'Other'.
	PhoneType *string `json:"phoneType,omitempty"`
	// The phone number.
	Phone *string `json:"phone,omitempty"`
	// The name of the phone provider.
	Provider *string `json:"provider,omitempty"`
	// The 4 character alphanumeric phone operating company number.
	OperatingCompanyNumber *string `json:"operatingCompanyNumber,omitempty"`
	// The telephone confidence score, ranging between 1 and 7, where 1 indicates highest confidence and 7 indicates unconfirmed.
	ConfidenceScore *int32 `json:"confidenceScore,omitempty"`
	// The date the record was first received, formatted: YYYYMMDD
	InitialDateReceived *string `json:"initialDateReceived,omitempty"`
	// The date the reocrd was last received as connected, formatted: YYYYMMDD
	LastDateReceived *string `json:"lastDateReceived,omitempty"`
	// The directory assistance indicator.
	DirectoryAssistance *string `json:"directoryAssistance,omitempty"`
	// The phone record type.
	RecordType *string `json:"recordType,omitempty"`
	// Indicates whether or not the phone is flagged as a Direct Inward Dial Number.
	DirectInwardDialNumber *bool `json:"directInwardDialNumber,omitempty"`
}

// NewDisconnectVerifyResponsePhone instantiates a new DisconnectVerifyResponsePhone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisconnectVerifyResponsePhone() *DisconnectVerifyResponsePhone {
	this := DisconnectVerifyResponsePhone{}
	return &this
}

// NewDisconnectVerifyResponsePhoneWithDefaults instantiates a new DisconnectVerifyResponsePhone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisconnectVerifyResponsePhoneWithDefaults() *DisconnectVerifyResponsePhone {
	this := DisconnectVerifyResponsePhone{}
	return &this
}

// GetPhoneType returns the PhoneType field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetPhoneType() string {
	if o == nil || o.PhoneType == nil {
		var ret string
		return ret
	}
	return *o.PhoneType
}

// GetPhoneTypeOk returns a tuple with the PhoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetPhoneTypeOk() (*string, bool) {
	if o == nil || o.PhoneType == nil {
		return nil, false
	}
	return o.PhoneType, true
}

// HasPhoneType returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasPhoneType() bool {
	if o != nil && o.PhoneType != nil {
		return true
	}

	return false
}

// SetPhoneType gets a reference to the given string and assigns it to the PhoneType field.
func (o *DisconnectVerifyResponsePhone) SetPhoneType(v string) {
	o.PhoneType = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *DisconnectVerifyResponsePhone) SetPhone(v string) {
	o.Phone = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *DisconnectVerifyResponsePhone) SetProvider(v string) {
	o.Provider = &v
}

// GetOperatingCompanyNumber returns the OperatingCompanyNumber field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetOperatingCompanyNumber() string {
	if o == nil || o.OperatingCompanyNumber == nil {
		var ret string
		return ret
	}
	return *o.OperatingCompanyNumber
}

// GetOperatingCompanyNumberOk returns a tuple with the OperatingCompanyNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetOperatingCompanyNumberOk() (*string, bool) {
	if o == nil || o.OperatingCompanyNumber == nil {
		return nil, false
	}
	return o.OperatingCompanyNumber, true
}

// HasOperatingCompanyNumber returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasOperatingCompanyNumber() bool {
	if o != nil && o.OperatingCompanyNumber != nil {
		return true
	}

	return false
}

// SetOperatingCompanyNumber gets a reference to the given string and assigns it to the OperatingCompanyNumber field.
func (o *DisconnectVerifyResponsePhone) SetOperatingCompanyNumber(v string) {
	o.OperatingCompanyNumber = &v
}

// GetConfidenceScore returns the ConfidenceScore field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetConfidenceScore() int32 {
	if o == nil || o.ConfidenceScore == nil {
		var ret int32
		return ret
	}
	return *o.ConfidenceScore
}

// GetConfidenceScoreOk returns a tuple with the ConfidenceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetConfidenceScoreOk() (*int32, bool) {
	if o == nil || o.ConfidenceScore == nil {
		return nil, false
	}
	return o.ConfidenceScore, true
}

// HasConfidenceScore returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasConfidenceScore() bool {
	if o != nil && o.ConfidenceScore != nil {
		return true
	}

	return false
}

// SetConfidenceScore gets a reference to the given int32 and assigns it to the ConfidenceScore field.
func (o *DisconnectVerifyResponsePhone) SetConfidenceScore(v int32) {
	o.ConfidenceScore = &v
}

// GetInitialDateReceived returns the InitialDateReceived field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetInitialDateReceived() string {
	if o == nil || o.InitialDateReceived == nil {
		var ret string
		return ret
	}
	return *o.InitialDateReceived
}

// GetInitialDateReceivedOk returns a tuple with the InitialDateReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetInitialDateReceivedOk() (*string, bool) {
	if o == nil || o.InitialDateReceived == nil {
		return nil, false
	}
	return o.InitialDateReceived, true
}

// HasInitialDateReceived returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasInitialDateReceived() bool {
	if o != nil && o.InitialDateReceived != nil {
		return true
	}

	return false
}

// SetInitialDateReceived gets a reference to the given string and assigns it to the InitialDateReceived field.
func (o *DisconnectVerifyResponsePhone) SetInitialDateReceived(v string) {
	o.InitialDateReceived = &v
}

// GetLastDateReceived returns the LastDateReceived field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetLastDateReceived() string {
	if o == nil || o.LastDateReceived == nil {
		var ret string
		return ret
	}
	return *o.LastDateReceived
}

// GetLastDateReceivedOk returns a tuple with the LastDateReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetLastDateReceivedOk() (*string, bool) {
	if o == nil || o.LastDateReceived == nil {
		return nil, false
	}
	return o.LastDateReceived, true
}

// HasLastDateReceived returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasLastDateReceived() bool {
	if o != nil && o.LastDateReceived != nil {
		return true
	}

	return false
}

// SetLastDateReceived gets a reference to the given string and assigns it to the LastDateReceived field.
func (o *DisconnectVerifyResponsePhone) SetLastDateReceived(v string) {
	o.LastDateReceived = &v
}

// GetDirectoryAssistance returns the DirectoryAssistance field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetDirectoryAssistance() string {
	if o == nil || o.DirectoryAssistance == nil {
		var ret string
		return ret
	}
	return *o.DirectoryAssistance
}

// GetDirectoryAssistanceOk returns a tuple with the DirectoryAssistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetDirectoryAssistanceOk() (*string, bool) {
	if o == nil || o.DirectoryAssistance == nil {
		return nil, false
	}
	return o.DirectoryAssistance, true
}

// HasDirectoryAssistance returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasDirectoryAssistance() bool {
	if o != nil && o.DirectoryAssistance != nil {
		return true
	}

	return false
}

// SetDirectoryAssistance gets a reference to the given string and assigns it to the DirectoryAssistance field.
func (o *DisconnectVerifyResponsePhone) SetDirectoryAssistance(v string) {
	o.DirectoryAssistance = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetRecordType() string {
	if o == nil || o.RecordType == nil {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetRecordTypeOk() (*string, bool) {
	if o == nil || o.RecordType == nil {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasRecordType() bool {
	if o != nil && o.RecordType != nil {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *DisconnectVerifyResponsePhone) SetRecordType(v string) {
	o.RecordType = &v
}

// GetDirectInwardDialNumber returns the DirectInwardDialNumber field value if set, zero value otherwise.
func (o *DisconnectVerifyResponsePhone) GetDirectInwardDialNumber() bool {
	if o == nil || o.DirectInwardDialNumber == nil {
		var ret bool
		return ret
	}
	return *o.DirectInwardDialNumber
}

// GetDirectInwardDialNumberOk returns a tuple with the DirectInwardDialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisconnectVerifyResponsePhone) GetDirectInwardDialNumberOk() (*bool, bool) {
	if o == nil || o.DirectInwardDialNumber == nil {
		return nil, false
	}
	return o.DirectInwardDialNumber, true
}

// HasDirectInwardDialNumber returns a boolean if a field has been set.
func (o *DisconnectVerifyResponsePhone) HasDirectInwardDialNumber() bool {
	if o != nil && o.DirectInwardDialNumber != nil {
		return true
	}

	return false
}

// SetDirectInwardDialNumber gets a reference to the given bool and assigns it to the DirectInwardDialNumber field.
func (o *DisconnectVerifyResponsePhone) SetDirectInwardDialNumber(v bool) {
	o.DirectInwardDialNumber = &v
}

func (o DisconnectVerifyResponsePhone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PhoneType != nil {
		toSerialize["phoneType"] = o.PhoneType
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.OperatingCompanyNumber != nil {
		toSerialize["operatingCompanyNumber"] = o.OperatingCompanyNumber
	}
	if o.ConfidenceScore != nil {
		toSerialize["confidenceScore"] = o.ConfidenceScore
	}
	if o.InitialDateReceived != nil {
		toSerialize["initialDateReceived"] = o.InitialDateReceived
	}
	if o.LastDateReceived != nil {
		toSerialize["lastDateReceived"] = o.LastDateReceived
	}
	if o.DirectoryAssistance != nil {
		toSerialize["directoryAssistance"] = o.DirectoryAssistance
	}
	if o.RecordType != nil {
		toSerialize["recordType"] = o.RecordType
	}
	if o.DirectInwardDialNumber != nil {
		toSerialize["directInwardDialNumber"] = o.DirectInwardDialNumber
	}
	return json.Marshal(toSerialize)
}

type NullableDisconnectVerifyResponsePhone struct {
	value *DisconnectVerifyResponsePhone
	isSet bool
}

func (v NullableDisconnectVerifyResponsePhone) Get() *DisconnectVerifyResponsePhone {
	return v.value
}

func (v *NullableDisconnectVerifyResponsePhone) Set(val *DisconnectVerifyResponsePhone) {
	v.value = val
	v.isSet = true
}

func (v NullableDisconnectVerifyResponsePhone) IsSet() bool {
	return v.isSet
}

func (v *NullableDisconnectVerifyResponsePhone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisconnectVerifyResponsePhone(val *DisconnectVerifyResponsePhone) *NullableDisconnectVerifyResponsePhone {
	return &NullableDisconnectVerifyResponsePhone{value: val, isSet: true}
}

func (v NullableDisconnectVerifyResponsePhone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisconnectVerifyResponsePhone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


