/*
 * Stakkd API
 *
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Stakkd.Stakkd;
using Stakkd.Stakkd.model;
using Stakkd.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Stakkd.Test.Model
{
    /// <summary>
    ///  Class for testing DemographicsAppendResponseDemographicsResidence
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DemographicsAppendResponseDemographicsResidenceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DemographicsAppendResponseDemographicsResidence
        //private DemographicsAppendResponseDemographicsResidence instance;

        public DemographicsAppendResponseDemographicsResidenceTests()
        {
            // TODO uncomment below to create an instance of DemographicsAppendResponseDemographicsResidence
            //instance = new DemographicsAppendResponseDemographicsResidence();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DemographicsAppendResponseDemographicsResidence
        /// </summary>
        [Fact]
        public void DemographicsAppendResponseDemographicsResidenceInstanceTest()
        {
            // TODO uncomment below to test "IsType" DemographicsAppendResponseDemographicsResidence
            //Assert.IsType<DemographicsAppendResponseDemographicsResidence>(instance);
        }


        /// <summary>
        /// Test the property 'Homeowner'
        /// </summary>
        [Fact]
        public void HomeownerTest()
        {
            // TODO unit test for the property 'Homeowner'
        }
        /// <summary>
        /// Test the property 'HasPool'
        /// </summary>
        [Fact]
        public void HasPoolTest()
        {
            // TODO unit test for the property 'HasPool'
        }
        /// <summary>
        /// Test the property 'EstimatedMarketValue'
        /// </summary>
        [Fact]
        public void EstimatedMarketValueTest()
        {
            // TODO unit test for the property 'EstimatedMarketValue'
        }
        /// <summary>
        /// Test the property 'LengthOfResidence'
        /// </summary>
        [Fact]
        public void LengthOfResidenceTest()
        {
            // TODO unit test for the property 'LengthOfResidence'
        }
        /// <summary>
        /// Test the property 'YearHomeBuilt'
        /// </summary>
        [Fact]
        public void YearHomeBuiltTest()
        {
            // TODO unit test for the property 'YearHomeBuilt'
        }
        /// <summary>
        /// Test the property 'MedianHouseValue'
        /// </summary>
        [Fact]
        public void MedianHouseValueTest()
        {
            // TODO unit test for the property 'MedianHouseValue'
        }
        /// <summary>
        /// Test the property 'Dwelling'
        /// </summary>
        [Fact]
        public void DwellingTest()
        {
            // TODO unit test for the property 'Dwelling'
        }
        /// <summary>
        /// Test the property 'IsMobileHome'
        /// </summary>
        [Fact]
        public void IsMobileHomeTest()
        {
            // TODO unit test for the property 'IsMobileHome'
        }
        /// <summary>
        /// Test the property 'HasFireplace'
        /// </summary>
        [Fact]
        public void HasFireplaceTest()
        {
            // TODO unit test for the property 'HasFireplace'
        }

    }

}
