/*
 * Stakkd API
 *
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Stakkd.Stakkd;
using Stakkd.Stakkd.model;
using Stakkd.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Stakkd.Test.Model
{
    /// <summary>
    ///  Class for testing DemographicsAppendResponseLifeStylesInterests
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DemographicsAppendResponseLifeStylesInterestsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DemographicsAppendResponseLifeStylesInterests
        //private DemographicsAppendResponseLifeStylesInterests instance;

        public DemographicsAppendResponseLifeStylesInterestsTests()
        {
            // TODO uncomment below to create an instance of DemographicsAppendResponseLifeStylesInterests
            //instance = new DemographicsAppendResponseLifeStylesInterests();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DemographicsAppendResponseLifeStylesInterests
        /// </summary>
        [Fact]
        public void DemographicsAppendResponseLifeStylesInterestsInstanceTest()
        {
            // TODO uncomment below to test "IsType" DemographicsAppendResponseLifeStylesInterests
            //Assert.IsType<DemographicsAppendResponseLifeStylesInterests>(instance);
        }


        /// <summary>
        /// Test the property 'HomeAndGarden'
        /// </summary>
        [Fact]
        public void HomeAndGardenTest()
        {
            // TODO unit test for the property 'HomeAndGarden'
        }
        /// <summary>
        /// Test the property 'Motorcycling'
        /// </summary>
        [Fact]
        public void MotorcyclingTest()
        {
            // TODO unit test for the property 'Motorcycling'
        }
        /// <summary>
        /// Test the property 'Sports'
        /// </summary>
        [Fact]
        public void SportsTest()
        {
            // TODO unit test for the property 'Sports'
        }
        /// <summary>
        /// Test the property 'SelfImprovement'
        /// </summary>
        [Fact]
        public void SelfImprovementTest()
        {
            // TODO unit test for the property 'SelfImprovement'
        }
        /// <summary>
        /// Test the property 'Gambling'
        /// </summary>
        [Fact]
        public void GamblingTest()
        {
            // TODO unit test for the property 'Gambling'
        }
        /// <summary>
        /// Test the property 'Collectibles'
        /// </summary>
        [Fact]
        public void CollectiblesTest()
        {
            // TODO unit test for the property 'Collectibles'
        }
        /// <summary>
        /// Test the property 'Technology'
        /// </summary>
        [Fact]
        public void TechnologyTest()
        {
            // TODO unit test for the property 'Technology'
        }
        /// <summary>
        /// Test the property 'Outdoors'
        /// </summary>
        [Fact]
        public void OutdoorsTest()
        {
            // TODO unit test for the property 'Outdoors'
        }
        /// <summary>
        /// Test the property 'Fitness'
        /// </summary>
        [Fact]
        public void FitnessTest()
        {
            // TODO unit test for the property 'Fitness'
        }
        /// <summary>
        /// Test the property 'HomeImprovement'
        /// </summary>
        [Fact]
        public void HomeImprovementTest()
        {
            // TODO unit test for the property 'HomeImprovement'
        }
        /// <summary>
        /// Test the property 'Cooking'
        /// </summary>
        [Fact]
        public void CookingTest()
        {
            // TODO unit test for the property 'Cooking'
        }
        /// <summary>
        /// Test the property 'AutoParts'
        /// </summary>
        [Fact]
        public void AutoPartsTest()
        {
            // TODO unit test for the property 'AutoParts'
        }
        /// <summary>
        /// Test the property 'Investing'
        /// </summary>
        [Fact]
        public void InvestingTest()
        {
            // TODO unit test for the property 'Investing'
        }
        /// <summary>
        /// Test the property 'Boating'
        /// </summary>
        [Fact]
        public void BoatingTest()
        {
            // TODO unit test for the property 'Boating'
        }
        /// <summary>
        /// Test the property 'Travel'
        /// </summary>
        [Fact]
        public void TravelTest()
        {
            // TODO unit test for the property 'Travel'
        }
        /// <summary>
        /// Test the property 'Arts'
        /// </summary>
        [Fact]
        public void ArtsTest()
        {
            // TODO unit test for the property 'Arts'
        }

    }

}
