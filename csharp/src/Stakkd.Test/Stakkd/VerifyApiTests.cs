/*
 * Stakkd API
 *
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io) 
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Stakkd.Client;
using Stakkd.Stakkd;
// uncomment below to import models
//using Stakkd.Stakkd.model;

namespace Stakkd.Test.Api
{
    /// <summary>
    ///  Class for testing VerifyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VerifyApiTests : IDisposable
    {
        private VerifyApi instance;

        public VerifyApiTests()
        {
            instance = new VerifyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VerifyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' VerifyApi
            //Assert.IsType<VerifyApi>(instance);
        }

        /// <summary>
        /// Test VerifyDisconnectPost
        /// </summary>
        [Fact]
        public void VerifyDisconnectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentType = null;
            //string xApiKey = null;
            //DisconnectVerifyRequest disconnectVerifyRequest = null;
            //var response = instance.VerifyDisconnectPost(contentType, xApiKey, disconnectVerifyRequest);
            //Assert.IsType<DisconnectVerifyResponse>(response);
        }

        /// <summary>
        /// Test VerifyEmailPost
        /// </summary>
        [Fact]
        public void VerifyEmailPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentType = null;
            //string xApiKey = null;
            //EmailVerifyRequest emailVerifyRequest = null;
            //var response = instance.VerifyEmailPost(contentType, xApiKey, emailVerifyRequest);
            //Assert.IsType<EmailVerifyResponse>(response);
        }

        /// <summary>
        /// Test VerifyPhonePost
        /// </summary>
        [Fact]
        public void VerifyPhonePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentType = null;
            //string xApiKey = null;
            //PhoneVerifyRequest phoneVerifyRequest = null;
            //var response = instance.VerifyPhonePost(contentType, xApiKey, phoneVerifyRequest);
            //Assert.IsType<PhoneVerifyResponse>(response);
        }

        /// <summary>
        /// Test VerifyTcpaPost
        /// </summary>
        [Fact]
        public void VerifyTcpaPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentType = null;
            //string xApiKey = null;
            //TcpaVerifyRequest tcpaVerifyRequest = null;
            //var response = instance.VerifyTcpaPost(contentType, xApiKey, tcpaVerifyRequest);
            //Assert.IsType<TcpaVerifyResponse>(response);
        }
    }
}
