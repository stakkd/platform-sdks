<?php
/**
 * DemographicsAppendResponseDemographicsPerson
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Stakkd API
 *
 * # Introduction The Stakkd platform provides comprehensive data services that meet the business objectives of organizations ranging from Fortune 500 companies to startups. Our clients work in an array of industries, including insurance, financial, legal, travel, hospitality, retail, health, media, and telecommunications.  The Stakkd API is documented using the Open API 3.0.1 standard.  All endpoints are available at https://api.stakkd.io/v1. Detailed documentation for each endpoint is below, including the full URL for the endpoint.  # Account Types The API supports two different account types, each with different permissions.  ## Paid Account Paid accounts provide unlimited access to all of the URIs.  ## Trial Account Trial Accounts have a limited number of queries to the APIs. Keep in mind that queries which do not return results still count against the Trial Account query limits. Trial Accounts are temporary, but can be upgraded or extended by contacting [support@stakkd.io](mailto:support@stakkd.io)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Stakkd.model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DemographicsAppendResponseDemographicsPerson Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class DemographicsAppendResponseDemographicsPerson implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'demographicsAppendResponse_demographics_person';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'education' => '\OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonEducation',
        'gender' => 'string',
        'ethnicity' => 'string',
        'race' => '\OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonRace',
        'date_of_birth' => 'string',
        'worker_type' => '\OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonWorkerType',
        'percent_mail_order_respondent' => 'int',
        'language' => '\OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonLanguage',
        'finances' => '\OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonFinances',
        'is_senior' => 'bool',
        'age' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'education' => null,
        'gender' => null,
        'ethnicity' => null,
        'race' => null,
        'date_of_birth' => null,
        'worker_type' => null,
        'percent_mail_order_respondent' => null,
        'language' => null,
        'finances' => null,
        'is_senior' => null,
        'age' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'education' => 'education',
        'gender' => 'gender',
        'ethnicity' => 'ethnicity',
        'race' => 'race',
        'date_of_birth' => 'dateOfBirth',
        'worker_type' => 'workerType',
        'percent_mail_order_respondent' => 'percentMailOrderRespondent',
        'language' => 'language',
        'finances' => 'finances',
        'is_senior' => 'isSenior',
        'age' => 'age'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'education' => 'setEducation',
        'gender' => 'setGender',
        'ethnicity' => 'setEthnicity',
        'race' => 'setRace',
        'date_of_birth' => 'setDateOfBirth',
        'worker_type' => 'setWorkerType',
        'percent_mail_order_respondent' => 'setPercentMailOrderRespondent',
        'language' => 'setLanguage',
        'finances' => 'setFinances',
        'is_senior' => 'setIsSenior',
        'age' => 'setAge'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'education' => 'getEducation',
        'gender' => 'getGender',
        'ethnicity' => 'getEthnicity',
        'race' => 'getRace',
        'date_of_birth' => 'getDateOfBirth',
        'worker_type' => 'getWorkerType',
        'percent_mail_order_respondent' => 'getPercentMailOrderRespondent',
        'language' => 'getLanguage',
        'finances' => 'getFinances',
        'is_senior' => 'getIsSenior',
        'age' => 'getAge'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const GENDER_M = 'M';
    const GENDER_F = 'F';
    const GENDER_U = 'U';
    const ETHNICITY_ASIAN = 'ASIAN';
    const ETHNICITY_AFRICANAMERICAN = 'AFRICANAMERICAN';
    const ETHNICITY_HISPANIC = 'HISPANIC';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getGenderAllowableValues()
    {
        return [
            self::GENDER_M,
            self::GENDER_F,
            self::GENDER_U,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEthnicityAllowableValues()
    {
        return [
            self::ETHNICITY_ASIAN,
            self::ETHNICITY_AFRICANAMERICAN,
            self::ETHNICITY_HISPANIC,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['education'] = $data['education'] ?? null;
        $this->container['gender'] = $data['gender'] ?? null;
        $this->container['ethnicity'] = $data['ethnicity'] ?? null;
        $this->container['race'] = $data['race'] ?? null;
        $this->container['date_of_birth'] = $data['date_of_birth'] ?? null;
        $this->container['worker_type'] = $data['worker_type'] ?? null;
        $this->container['percent_mail_order_respondent'] = $data['percent_mail_order_respondent'] ?? null;
        $this->container['language'] = $data['language'] ?? null;
        $this->container['finances'] = $data['finances'] ?? null;
        $this->container['is_senior'] = $data['is_senior'] ?? null;
        $this->container['age'] = $data['age'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getGenderAllowableValues();
        if (!is_null($this->container['gender']) && !in_array($this->container['gender'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'gender', must be one of '%s'",
                $this->container['gender'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getEthnicityAllowableValues();
        if (!is_null($this->container['ethnicity']) && !in_array($this->container['ethnicity'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'ethnicity', must be one of '%s'",
                $this->container['ethnicity'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets education
     *
     * @return \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonEducation|null
     */
    public function getEducation()
    {
        return $this->container['education'];
    }

    /**
     * Sets education
     *
     * @param \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonEducation|null $education education
     *
     * @return self
     */
    public function setEducation($education)
    {
        $this->container['education'] = $education;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender The gender of the person, where: M = Male; F = Female; U = Unknown.
     *
     * @return self
     */
    public function setGender($gender)
    {
        $allowedValues = $this->getGenderAllowableValues();
        if (!is_null($gender) && !in_array($gender, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'gender', must be one of '%s'",
                    $gender,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets ethnicity
     *
     * @return string|null
     */
    public function getEthnicity()
    {
        return $this->container['ethnicity'];
    }

    /**
     * Sets ethnicity
     *
     * @param string|null $ethnicity The ethnicity of the person.
     *
     * @return self
     */
    public function setEthnicity($ethnicity)
    {
        $allowedValues = $this->getEthnicityAllowableValues();
        if (!is_null($ethnicity) && !in_array($ethnicity, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'ethnicity', must be one of '%s'",
                    $ethnicity,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ethnicity'] = $ethnicity;

        return $this;
    }

    /**
     * Gets race
     *
     * @return \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonRace|null
     */
    public function getRace()
    {
        return $this->container['race'];
    }

    /**
     * Sets race
     *
     * @param \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonRace|null $race race
     *
     * @return self
     */
    public function setRace($race)
    {
        $this->container['race'] = $race;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return string|null
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param string|null $date_of_birth The date of birth as the person, formatted: yyyyMM
     *
     * @return self
     */
    public function setDateOfBirth($date_of_birth)
    {
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets worker_type
     *
     * @return \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonWorkerType|null
     */
    public function getWorkerType()
    {
        return $this->container['worker_type'];
    }

    /**
     * Sets worker_type
     *
     * @param \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonWorkerType|null $worker_type worker_type
     *
     * @return self
     */
    public function setWorkerType($worker_type)
    {
        $this->container['worker_type'] = $worker_type;

        return $this;
    }

    /**
     * Gets percent_mail_order_respondent
     *
     * @return int|null
     */
    public function getPercentMailOrderRespondent()
    {
        return $this->container['percent_mail_order_respondent'];
    }

    /**
     * Sets percent_mail_order_respondent
     *
     * @param int|null $percent_mail_order_respondent The Penetration Percentage for indicating whether the person is a mail order respondent, +/- 3%.
     *
     * @return self
     */
    public function setPercentMailOrderRespondent($percent_mail_order_respondent)
    {
        $this->container['percent_mail_order_respondent'] = $percent_mail_order_respondent;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonLanguage|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonLanguage|null $language language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets finances
     *
     * @return \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonFinances|null
     */
    public function getFinances()
    {
        return $this->container['finances'];
    }

    /**
     * Sets finances
     *
     * @param \OpenAPI\Client\Stakkd.model\DemographicsAppendResponseDemographicsPersonFinances|null $finances finances
     *
     * @return self
     */
    public function setFinances($finances)
    {
        $this->container['finances'] = $finances;

        return $this;
    }

    /**
     * Gets is_senior
     *
     * @return bool|null
     */
    public function getIsSenior()
    {
        return $this->container['is_senior'];
    }

    /**
     * Sets is_senior
     *
     * @param bool|null $is_senior Indicates whether the person is flagged as a senior.
     *
     * @return self
     */
    public function setIsSenior($is_senior)
    {
        $this->container['is_senior'] = $is_senior;

        return $this;
    }

    /**
     * Gets age
     *
     * @return int|null
     */
    public function getAge()
    {
        return $this->container['age'];
    }

    /**
     * Sets age
     *
     * @param int|null $age The age of the person.
     *
     * @return self
     */
    public function setAge($age)
    {
        $this->container['age'] = $age;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


